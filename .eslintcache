[{"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\registration.tsx":"1","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\index.tsx":"2","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Inputs.tsx":"3","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Buttons.tsx":"4"},{"size":2349,"mtime":1611764419930,"results":"5","hashOfConfig":"6"},{"size":223,"mtime":1611764419928,"results":"7","hashOfConfig":"6"},{"size":634,"mtime":1611760562261,"results":"8","hashOfConfig":"6"},{"size":1044,"mtime":1611760562261,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"12khao8",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\registration.tsx",["22","23","24","25","26"],"import react from \"react\";\r\n\r\nimport \"../css/registration.css\";\r\n\r\nimport {DefaultButton} from \"../../uiKit/Buttons\";\r\n\r\nimport {DefaultInput} from \"../../uiKit/Inputs\";\r\n\r\nimport vkImg from \"../svg/VkImage.svg\";\r\nimport googleImg from \"../svg/googleImg.svg\";\r\n\r\nexport const Registration:react.FC = () => {\r\n    return (\r\n    <div className=\"centered\">\r\n        <div className=\"registration__container\">\r\n            <div className=\"heading\">Добро пожаловать в EvgenApp</div>\r\n            <div className=\"toggle__reg\">\r\n                <div className=\"toggle-text\">Вход</div>\r\n                <div className=\"toggle-text\">Регистрация</div>\r\n            </div>\r\n            <DefaultInput handleChange={() => {}} class=\"reg-input\" placeHolder=\"E-mail\"></DefaultInput>\r\n            <DefaultInput handleChange={() => {}} class=\"reg-input\" placeHolder=\"Password\"></DefaultInput>\r\n            <div className=\"password-refresh\">Восстановить пароль</div>\r\n            <DefaultButton handleClick={()=>{}} class=\"reg-btn\">\r\n                Войти\r\n            </DefaultButton>\r\n            <div className=\"or-container\">\r\n                <div className=\"line\"></div>\r\n                <div className=\"or-content\">или</div>\r\n                <div className=\"line\"></div>\r\n            </div>\r\n            <DefaultButton handleClick={()=>{}} class=\"reg-btn vk-btn\">\r\n                <div className=\"vk-button\">\r\n                    <img src={vkImg} alt=\"\" className=\"vk-button__img\"/>\r\n                    <span className=\"vk-button__text\">\r\n                        <span>\r\n                        Войти с помощью VK\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            </DefaultButton>\r\n            <DefaultButton handleClick={()=>{}} class=\"reg-btn google-btn\">\r\n                <div className=\"vk-button\">\r\n                        <img src={googleImg} alt=\"\" className=\"vk-button__img\"/>\r\n                        <span className=\"vk-button__text\">\r\n                            <span className=\"google-text-color\">\r\n                            Войти с помощью Google\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n            </DefaultButton>\r\n        </div>\r\n    </div>\r\n    );\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\index.tsx",["27"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Inputs.tsx",["28","29","30","31"],"import { type } from 'os';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./css/InputField.css\"\r\n\r\ninterface InputsConfig{\r\n    placeHolder?:string;\r\n    handleChange?:Function;\r\n    type?: string;\r\n    class?:string;\r\n};\r\n\r\nexport const DefaultInput : React.FC<InputsConfig> = (props) => {   \r\n    const classes = \"myInput \" + (props.class == undefined ? \"\" : props.class); \r\n    return (\r\n        <input className={classes} placeholder={props.placeHolder} onChange={\r\n            (event)=> props.handleChange != undefined ? props.handleChange(event) : {}} \r\n            type={props.type}></input>\r\n    );\r\n}",["32","33"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Buttons.tsx",["34","35","36","37","38","39","40"],"import React, {useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./css/Buttons.css\"\r\nimport download from \"../images/download.svg\"\r\nimport { CSSProperties } from 'react';\r\n\r\n\r\ninterface ButtonsConfig{\r\n    text?:String;\r\n    handleClick:Function;\r\n    style?:boolean;\r\n    class?:string;\r\n    children?:React.ReactNode;\r\n};\r\n\r\nexport const DefaultButton : React.FC<ButtonsConfig> = (props) => {\r\n    const btnStyle = {\r\n        width:\"30vw\",\r\n        height:\"5vw\"\r\n    };\r\n    const classes = \"defaultButton \" + (props.class == undefined ? \"\" : props.class);\r\n    return (\r\n        <button className={classes} style={props.style == true? btnStyle:{}} onClick={()=> props.handleClick()}>{props.children}</button>\r\n    );\r\n}\r\n\r\nexport const DownloadButton : React.FC<ButtonsConfig> = (props) => {\r\n    return (\r\n        <button className=\"DownloadButton\" onClick={()=> props.handleClick()}><img src={download}></img></button>\r\n    );\r\n}\r\n\r\ninterface ToogleConfig{\r\n    handleChange:Function;\r\n    buttons:Array<string>;\r\n}\r\n\r\n\r\n",{"ruleId":"41","severity":1,"message":"42","line":7,"column":9,"nodeType":"43","messageId":"44","endLine":7,"endColumn":21},{"ruleId":"41","severity":1,"message":"45","line":20,"column":12,"nodeType":"43","messageId":"44","endLine":20,"endColumn":16},{"ruleId":"46","severity":1,"message":"47","line":23,"column":55,"nodeType":"48","messageId":"49","endLine":23,"endColumn":57},{"ruleId":"50","severity":1,"message":"51","line":38,"column":21,"nodeType":"52","endLine":38,"endColumn":35},{"ruleId":"50","severity":1,"message":"53","line":41,"column":21,"nodeType":"52","endLine":41,"endColumn":42},{"ruleId":"41","severity":1,"message":"54","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":13},{"ruleId":"41","severity":1,"message":"55","line":1,"column":10,"nodeType":"43","messageId":"44","endLine":1,"endColumn":14},{"ruleId":"41","severity":1,"message":"56","line":3,"column":8,"nodeType":"43","messageId":"44","endLine":3,"endColumn":16},{"ruleId":"46","severity":1,"message":"47","line":14,"column":47,"nodeType":"48","messageId":"49","endLine":14,"endColumn":49},{"ruleId":"46","severity":1,"message":"57","line":17,"column":42,"nodeType":"48","messageId":"49","endLine":17,"endColumn":44},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"41","severity":1,"message":"62","line":1,"column":16,"nodeType":"43","messageId":"44","endLine":1,"endColumn":24},{"ruleId":"41","severity":1,"message":"56","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":16},{"ruleId":"41","severity":1,"message":"63","line":5,"column":10,"nodeType":"43","messageId":"44","endLine":5,"endColumn":23},{"ruleId":"46","severity":1,"message":"47","line":21,"column":53,"nodeType":"48","messageId":"49","endLine":21,"endColumn":55},{"ruleId":"46","severity":1,"message":"47","line":23,"column":56,"nodeType":"48","messageId":"49","endLine":23,"endColumn":58},{"ruleId":"64","severity":1,"message":"65","line":29,"column":79,"nodeType":"52","endLine":29,"endColumn":99},{"ruleId":"41","severity":1,"message":"66","line":33,"column":11,"nodeType":"43","messageId":"44","endLine":33,"endColumn":23},"@typescript-eslint/no-unused-vars","'DefaultInput' is defined but never used.","Identifier","unusedVar","'path' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component Login_inputs must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Registration_inputs must be in PascalCase or SCREAMING_SNAKE_CASE","'react' is defined but never used.","'type' is defined but never used.","'ReactDOM' is defined but never used.","Expected '!==' and instead saw '!='.","no-native-reassign",["67"],"no-negated-in-lhs",["68"],"'useState' is defined but never used.","'CSSProperties' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ToogleConfig' is defined but never used.","no-global-assign","no-unsafe-negation"]