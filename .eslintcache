[{"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\registration.tsx":"1","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\index.tsx":"2","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Inputs.tsx":"3","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Buttons.tsx":"4","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\routing.jsx":"5","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\login-inputs.tsx":"6","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\registration-inputs.tsx":"7","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\client.js":"8","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\interfaces.ts":"9","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\MUTATIONS\\registerUser.ts":"10","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\MUTATIONS\\getToken.ts":"11","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\wirteToken.ts":"12","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\checkToken.ts":"13","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\organisations.tsx":"14","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\orgCard.tsx":"15","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\getToken.ts":"16","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getOrg.ts":"17","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\childSubjectWidget.tsx":"18","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Cards.tsx":"19","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getSubjectInfo.ts":"20","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\childContext.ts":"21","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\childLobbyContentRouter.tsx":"22","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\subjectDetail.tsx":"23","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\lessonWidget.tsx":"24","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getLessonInfo.ts":"25","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\lessonDetails.tsx":"26","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\editor.jsx":"27","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\materialCard.tsx":"28","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\testCard.tsx":"29","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getLessonDetails.ts":"30","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\LobbyContentRouter.tsx":"31","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\teacherLobbyContentRouter.tsx":"32","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\teacherClasses.tsx":"33","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\teacherClassCard.tsx":"34","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getTeacherSubjects.ts":"35","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\generated\\graphql.tsx":"36","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\createMaterial.tsx":"37","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\toggleButton.tsx":"38","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\childTestCompletion\\emptyTask\\index.tsx":"39"},{"size":2962,"mtime":1611771070492,"results":"40","hashOfConfig":"41"},{"size":342,"mtime":1612437142283,"results":"42","hashOfConfig":"41"},{"size":675,"mtime":1612450429638,"results":"43","hashOfConfig":"41"},{"size":1137,"mtime":1612423967061,"results":"44","hashOfConfig":"41"},{"size":793,"mtime":1612098626120,"results":"45","hashOfConfig":"41"},{"size":1235,"mtime":1611771070491,"results":"46","hashOfConfig":"41"},{"size":1339,"mtime":1611771070491,"results":"47","hashOfConfig":"41"},{"size":244,"mtime":1611426781332,"results":"48","hashOfConfig":"41"},{"size":72,"mtime":1611771070490,"results":"49","hashOfConfig":"41"},{"size":217,"mtime":1611771070489,"results":"50","hashOfConfig":"41"},{"size":198,"mtime":1611771070489,"results":"51","hashOfConfig":"41"},{"size":162,"mtime":1611771070488,"results":"52","hashOfConfig":"41"},{"size":85,"mtime":1611771070488,"results":"53","hashOfConfig":"41"},{"size":1912,"mtime":1612427475751,"results":"54","hashOfConfig":"41"},{"size":1041,"mtime":1612001486457,"results":"55","hashOfConfig":"41"},{"size":76,"mtime":1611839004045,"results":"56","hashOfConfig":"41"},{"size":595,"mtime":1612093476182,"results":"57","hashOfConfig":"41"},{"size":2339,"mtime":1612427748240,"results":"58","hashOfConfig":"41"},{"size":6078,"mtime":1611971375175,"results":"59","hashOfConfig":"41"},{"size":378,"mtime":1612002637695,"results":"60","hashOfConfig":"41"},{"size":158,"mtime":1612440111816,"results":"61","hashOfConfig":"41"},{"size":995,"mtime":1612096304729,"results":"62","hashOfConfig":"41"},{"size":2681,"mtime":1612130993509,"results":"63","hashOfConfig":"41"},{"size":2138,"mtime":1612019857272,"results":"64","hashOfConfig":"41"},{"size":333,"mtime":1612089889087,"results":"65","hashOfConfig":"41"},{"size":8487,"mtime":1612459839249,"results":"66","hashOfConfig":"41"},{"size":692,"mtime":1612435508211,"results":"67","hashOfConfig":"41"},{"size":555,"mtime":1612091771720,"results":"68","hashOfConfig":"41"},{"size":697,"mtime":1612091609047,"results":"69","hashOfConfig":"41"},{"size":356,"mtime":1612305423649,"results":"70","hashOfConfig":"41"},{"size":3300,"mtime":1612130772226,"results":"71","hashOfConfig":"41"},{"size":895,"mtime":1612106993713,"results":"72","hashOfConfig":"41"},{"size":1948,"mtime":1612126267317,"results":"73","hashOfConfig":"41"},{"size":1350,"mtime":1612122396861,"results":"74","hashOfConfig":"41"},{"size":370,"mtime":1612125431591,"results":"75","hashOfConfig":"41"},{"size":69485,"mtime":1612457574835,"results":"76","hashOfConfig":"41"},{"size":5248,"mtime":1612452703371,"results":"77","hashOfConfig":"41"},{"size":1909,"mtime":1612432218161,"results":"78","hashOfConfig":"41"},{"size":160,"mtime":1612436898980,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},"12khao8",{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"83"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"83"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"83"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"83"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"129","usedDeprecatedRules":"83"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"83"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"83"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"83"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"83"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\registration.tsx",["178","179","180","181","182"],"import react from \"react\";\r\n\r\nimport \"../css/registration.css\";\r\n\r\nimport {DefaultButton} from \"../../uiKit/Buttons\";\r\n\r\nimport {DefaultInput} from \"../../uiKit/Inputs\";\r\n\r\nimport vkImg from \"../svg/VkImage.svg\";\r\nimport googleImg from \"../svg/googleImg.svg\";\r\n\r\nimport {Login_inputs} from \"./login-inputs\";\r\nimport {Registration_inputs} from \"./registration-inputs\";\r\n\r\nimport {\r\n    Link, Switch, Route, useRouteMatch, useLocation\r\n} from \"react-router-dom\";\r\n\r\nexport const Registration:react.FC = () => {\r\n    const {path, url} = useRouteMatch();\r\n    const location = useLocation();\r\n    console.log(location);\r\n    const isSign = location.pathname.split(\"/\").pop() == \"Login\";\r\n    return (\r\n    <div className=\"centered\">\r\n        <div className=\"registration__container\">\r\n            <div className=\"heading\">Добро пожаловать в EvgenApp</div>\r\n            <div className=\"toggle__reg\">\r\n                <Link to=\"Login\">                \r\n                    <div className={\"toggle-text \" + (isSign ? \"\" : \"disabled\")}>Вход</div>\r\n                </Link>\r\n                <Link to=\"Registration\">\r\n                    <div className={\"toggle-text \" + (isSign ? \"disabled\": \"\")}>Регистрация</div>\r\n                </Link>\r\n            </div>\r\n            <Switch>\r\n                <Route path={`${url}/Login`}>\r\n                    <Login_inputs></Login_inputs>\r\n                </Route>\r\n                <Route path={`${url}/Registration`}>\r\n                    <Registration_inputs></Registration_inputs>\r\n                </Route>\r\n            </Switch>\r\n            <div className=\"or-container\">\r\n                <div className=\"line\"></div>\r\n                <div className=\"or-content\">или</div>\r\n                <div className=\"line\"></div>\r\n            </div>\r\n            <DefaultButton handleClick={()=>{}} class=\"reg-btn vk-btn\">\r\n                <div className=\"vk-button\">\r\n                    <img src={vkImg} alt=\"\" className=\"vk-button__img\"/>\r\n                    <span className=\"vk-button__text\">\r\n                        <span>\r\n                        Войти с помощью VK\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            </DefaultButton>\r\n            <DefaultButton handleClick={()=>{}} class=\"reg-btn google-btn\">\r\n                <div className=\"vk-button\">\r\n                        <img src={googleImg} alt=\"\" className=\"vk-button__img\"/>\r\n                        <span className=\"vk-button__text\">\r\n                            <span className=\"google-text-color\">\r\n                            Войти с помощью Google\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n            </DefaultButton>\r\n        </div>\r\n    </div>\r\n    );\r\n}",["183","184"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\index.tsx",["185","186","187"],"import react from \"react\";\r\n\r\nimport ReactDom from \"react-dom\";\r\n\r\nimport {Registration} from \"./screens/content/registration\";\r\n\r\nimport {Routing} from \"./screens/content/routing\"\r\n\r\nimport {EmptyTask} from \"./screens/childTestCompletion/emptyTask/index\";\r\n\r\nReactDom.render(\r\n    <Routing></Routing>,\r\n    document.getElementById(\"root\")\r\n)","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Inputs.tsx",["188","189","190","191"],"import { type } from 'os';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./css/InputField.css\"\r\n\r\ninterface InputsConfig{\r\n    placeHolder?:string;\r\n    handleChange?:Function;\r\n    value?:string;\r\n    type?: string;\r\n    class?:string;\r\n};\r\n\r\nexport const DefaultInput : React.FC<InputsConfig> = (props) => {   \r\n    const classes = \"myInput \" + (props.class == undefined ? \"\" : props.class); \r\n    return (\r\n        <input className={classes} placeholder={props.placeHolder} onChange={\r\n            (event)=> props.handleChange != undefined ? props.handleChange(event) : {}} \r\n            type={props.type} value={props.value!}></input>\r\n    );\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Buttons.tsx",["192","193","194","195","196","197","198"],"import React, {useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./css/Buttons.css\"\r\nimport download from \"../images/download.svg\"\r\nimport { CSSProperties } from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface ButtonsConfig{\r\n    text?:String;\r\n    handleClick:Function;\r\n    style?:boolean;\r\n    class?:string;\r\n    children?:React.ReactNode;\r\n};\r\n\r\nexport const DefaultButton : React.FC<ButtonsConfig> = (props) => {\r\n    const btnStyle = {\r\n        width:\"30vw\",\r\n        height:\"5vw\"\r\n    };\r\n    const classes = \"defaultButton \" + (props.class == undefined ? \"\" : props.class);\r\n    return (\r\n        <button className={classes} style={props.style == true? btnStyle:{}} onClick={()=> props.handleClick()}>{props.children}</button>\r\n    );\r\n}\r\n\r\nexport const DownloadButton : React.FC<ButtonsConfig> = (props) => {\r\n    return (\r\n        <button className=\"DownloadButton\" onClick={()=> props.handleClick()}><img src={download}></img></button>\r\n    );\r\n}\r\n\r\ninterface ToogleConfig{\r\n    handleChange:Function;\r\n    buttons:Array<string>;\r\n}\r\n\r\n\r\n/*\r\n-uikit\r\n    ToggleButton\r\n        -index.tsx\r\n        toggleButton.module.css\r\n*/","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\routing.jsx",["199"],"import React from \"react\";\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\"\r\nimport {\r\n    ApolloProvider\r\n} from \"@apollo/client\"\r\nimport client from \"../../client\"\r\n\r\nimport {Registration} from \"./registration\"\r\n\r\nimport {OrganisationList} from \"./organisations\";\r\n\r\nimport {ChildLobby} from \"./LobbyContentRouter\";\r\n\r\n\r\nexport const Routing = () => {\r\n    return <ApolloProvider client={client}>\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/enter-user\">\r\n                    <Registration></Registration>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <OrganisationList></OrganisationList>\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    </ApolloProvider>\r\n;\r\n}",["200","201"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\login-inputs.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\registration-inputs.tsx",["202"],"import React from \"react\"\r\nimport { DefaultButton } from \"../../uiKit/Buttons\"\r\nimport { DefaultInput } from \"../../uiKit/Inputs\"\r\n\r\nimport \"../css/inputs.css\"\r\n\r\nexport const Registration_inputs:React.FC = () =>{\r\n    return <div className=\"inputs_flex\">\r\n        <DefaultInput handleChange={() => {}} class=\"reg-input\" placeHolder=\"ФИО\"></DefaultInput>\r\n        <DefaultInput handleChange={() => {}} class=\"reg-input\" placeHolder=\"E-mail\"></DefaultInput>\r\n        <DefaultInput handleChange={() => {}} class=\"reg-input\" placeHolder=\"Password\"></DefaultInput>\r\n        <DefaultButton handleClick={()=>{}} class=\"reg-btn\">\r\n            Зарегистрироваться\r\n        </DefaultButton>\r\n    </div>\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\client.js",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\interfaces.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\MUTATIONS\\registerUser.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\MUTATIONS\\getToken.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\wirteToken.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\checkToken.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\organisations.tsx",["203","204","205","206","207"],"import react from \"react\"\r\n\r\nimport {OrgCard} from \"../../uiKit/orgCard\";\r\n\r\nimport \"../css/org-list.css\"\r\n\r\nimport {useQuery} from \"@apollo/client\";\r\nimport {getUserOrg} from \"../../QUERIES/getOrg\"\r\n\r\nimport {getToken} from \"../../LocalStorageInteraction/getToken\";\r\n\r\nimport {IEDataProcessing} from \"./interfaces\"\r\n\r\nimport {\r\n    Route, Switch\r\n} from \"react-router-dom\";\r\n\r\nimport {\r\n    LobbyContentRouter\r\n} from \"./LobbyContentRouter\";\r\n\r\nimport {useUserInfoQuery} from \"../../generated/graphql\";\r\n\r\nfunction Processing(arrayProcessed:any, role:string) {\r\n    let result = []\r\n    let links = []\r\n    for (const childProfile of arrayProcessed){\r\n        result.push(<OrgCard\r\n            subjects={childProfile.node.org.subjects}\r\n            name={childProfile.node.org.name}\r\n            childLen={childProfile.node.org.childrenLength}\r\n            classesLen={childProfile.node.org.classesLength}\r\n            role={role}\r\n            id={childProfile.node.id}\r\n        ></OrgCard>);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const OrganisationList:react.FC = () =>{\r\n    const {loading, error, data} = useUserInfoQuery({variables: {id: getToken()!}})\r\n    if (loading) return <div>loading...</div>\r\n    console.log(data)\r\n    return <Switch>\r\n        <Route path=\"/:id/:type/\">\r\n            <LobbyContentRouter></LobbyContentRouter>\r\n        </Route>\r\n        <Route path=\"/\">\r\n            <div className=\"centered\">\r\n                <div className=\"org-list__public\">\r\n                    <div className=\"heading\">Мои организации</div>\r\n                    <div className=\"org-list__container\">\r\n                        {Processing(data?.userInfo?.profile?.childSet.edges, \"child\")}\r\n                        {Processing(data?.userInfo?.profile?.teacherSet.edges, \"teacher\")}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Route>\r\n\r\n    </Switch>\r\n\r\n\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\orgCard.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\getToken.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getOrg.ts",[],["208","209"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\childSubjectWidget.tsx",["210","211","212"],"import react, {useContext} from \"react\";\r\n\r\nimport \"../css/childSubjectWidget.css\"\r\n\r\nimport {SubjectCard} from \"../../uiKit/Cards\";\r\n\r\nimport {\r\n    useQuery\r\n} from \"@apollo/client\";\r\nimport {\r\n    Switch, Route, Link, useLocation, useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\nimport {subjectInfoQuery} from \"../../QUERIES/getSubjectInfo\"\r\n\r\nimport {ChildContext} from \"./childContext\";\r\n\r\nimport {SubjectDetail} from \"./subjectDetail\"\r\n\r\nimport {useChildSubjectsQuery} from \"../../generated/graphql\"\r\n\r\ninterface QueryData{\r\n    node: {\r\n        name:string\r\n        classes: {\r\n            name:string,\r\n            id:string\r\n            teachersSet: {\r\n                name:string\r\n            }[]\r\n        }[]\r\n    }\r\n}\r\n\r\nfunction parseData(data:any, location:string){\r\n    console.log(data);\r\n    let res = [];\r\n    for (let elem of data){\r\n        for (let subject of elem.node.classes) {\r\n            let teacherNames = []\r\n            for (let teacher of subject.teachersSet){\r\n                teacherNames.push(teacher.name)\r\n            }\r\n            res.push(\r\n                <Link to={`${location}/${subject.id}`} className=\"subject__link\">\r\n                    <SubjectCard\r\n                        teacher={teacherNames.join(\", \")}\r\n                        subject={subject.name}\r\n                        onClick = {() => {}}\r\n                        class={elem.node.name}\r\n                    ></SubjectCard>\r\n                </Link>\r\n);  \r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nexport const ChildSubject:react.FC = (props) => {\r\n    const location = useLocation();\r\n    const {id} = useContext(ChildContext);\r\n    const match = useRouteMatch();\r\n    console.log(match.url)\r\n    const {loading, data} = useChildSubjectsQuery({variables: {id:id}})\r\n    if (loading) return <div>loading...</div>\r\n    console.log(data?.child?.groups.edges);\r\n    let res = parseData(data?.child?.groups.edges, match.url);\r\n    return <Switch>\r\n        <Route path={`${match.url}/:id`}>\r\n            <SubjectDetail></SubjectDetail>\r\n        </Route>\r\n\r\n        <Route path={`${location.pathname}`}>\r\n            <div className=\"subjects__container\">\r\n                <div className=\"subjects__heading\">Основные предметы</div>\r\n                {res}\r\n            </div>\r\n        </Route>\r\n    </Switch>             \r\n\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Cards.tsx",["213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./css/Cards.css\";\r\nimport image1 from \"../images/cardImg.svg\";\r\nimport image2 from \"../images/cardImg1.svg\";\r\nimport image3 from \"../images/cardImg2.svg\";\r\nimport image4 from \"../images/cardImg3.svg\";\r\nimport image5 from \"../images/cardImg4.svg\";\r\nimport {DefaultButton} from \"./Buttons\"\r\nimport { TaskRow } from './ChildTestDetail';\r\n\r\n\r\ninterface SubjectConfig{\r\n    teacher:string;\r\n    subject:string;\r\n    date?:Date;\r\n    newTasks?:number;\r\n    class:string;\r\n    onClick:Function;\r\n};\r\n\r\nexport const SubjectCard : React.FC<SubjectConfig> = (props) => {\r\n    function getRandomInt(min:number, max:number) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min)) + min; \r\n      }\r\n\r\n    let image;\r\n\r\n    let images = [image5,image1,image2,image3,image4]\r\n\r\n    image = images[getRandomInt(0,images.length)]\r\n    return (\r\n        <button className=\"SbCard\" onClick={(event)=>props.onClick(event)}>\r\n            <div className=\"card__content\">\r\n                <div className=\"subDiv\">\r\n                    <div className=\"group\">\r\n                        <div className=\"SubjectText\">{props.subject}</div>\r\n                        <div className=\"TeacherText\">{props.teacher}</div>\r\n                    </div>\r\n                    <div className=\"back_label\">Класс: <span className=\"colorized\">{props.class}</span></div>\r\n                </div>\r\n                <div className=\"taskDiv\">\r\n                    <div className={props.newTasks==undefined? \"noTasks\":\"newTasks\"}>{props.newTasks==undefined? \"Нет заданий\":`Новое задание(${props.newTasks})`}</div>\r\n                    <div className=\"TeacherText\">\r\n                        {props.newTasks==undefined? \"\": props.date == undefined? \"\":\"до \" + props.date?.getDate() + \".\" + props.date?.getMonth()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <img className=\"image\" src={image}></img>\r\n            \r\n\r\n        </button>\r\n    );\r\n}\r\n\r\ninterface TaskConfig{\r\n    subject:string;\r\n    theme:string;\r\n    teacher:string;\r\n    period?:Date;\r\n    questions:number;\r\n    minuts?:number;\r\n    task:Function;\r\n}\r\n\r\nfunction declOfNum(number:number, words:Array<string>) {  \r\n    return words[(number % 100 > 4 && number % 100 < 20) ? 2 : [2, 0, 1, 1, 1, 2][(number % 10 < 5) ? number % 10 : 5]];\r\n}\r\n\r\nexport const TaskCard :React.FC<TaskConfig> = (props) => {\r\n\r\n\r\n    return(\r\n        <div className=\"tkCard\">\r\n            <span className=\"SubjectText\">{props.subject}</span>\r\n            <p>\r\n                <span className=\"noTasks\">{props.theme}</span><br></br>\r\n                <span className=\"TeacherText\">{props.teacher}</span><br></br>\r\n                <span className=\"TeacherText\">{props.period==undefined? \"не ограничено\": \"до \" + props.period?.getDate() + \".\" + props.period?.getMonth()+\".\"+props.period?.getFullYear()+\"    \"+props.period.getHours()+\":\"+ props.period.getMinutes()}</span>\r\n\r\n\r\n            </p>\r\n            <p>\r\n                <span className=\"noTasks\">{props.questions.toString() + declOfNum(props.questions, [\" вопрос\",\" вопроса\",\" вопросов\"])}</span><br></br>\r\n                <span className=\"noTasks\">{props.minuts==undefined? \"Время на выполнение неограничено\": props.minuts.toString() + declOfNum(props.minuts,[' минута', ' минуты', ' минут' + \" \"])}\r\n                    {props.minuts==undefined? \"\":<span className=\"TeacherText\"> на выполнение</span>}\r\n                </span>\r\n            </p>\r\n\r\n            <DefaultButton text=\"начать выполнение\" handleClick={()=>props.task()} style={true}></DefaultButton>\r\n            \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface GradeConfig{\r\n    subject:string;\r\n    theme:string;\r\n    teacher:string;\r\n    period?:Date;\r\n    grade_num?:number;\r\n    grade_text?:string;\r\n    exeptions?:number;\r\n}\r\n\r\nexport const GradeCard :React.FC<GradeConfig> = (props) => {\r\n\r\n    function declOfNum(number:number, words:Array<string>) {  \r\n        return words[(number % 100 > 4 && number % 100 < 20) ? 2 : [2, 0, 1, 1, 1, 2][(number % 10 < 5) ? number % 10 : 5]];\r\n    }\r\n    return(\r\n        <div className=\"tkCard\">\r\n            <span className=\"SubjectText\">{props.subject}</span>\r\n            <p>\r\n                <span className=\"noTasks\">{props.theme}</span><br></br>\r\n                <span className=\"TeacherText\">{props.teacher}</span><br></br>\r\n                <span className=\"TeacherText\">{props.period==undefined? \"не ограничено\": \"до \" + props.period?.getDate() + \".\" + props.period?.getMonth()+\".\"+props.period?.getFullYear()+\"    \"+props.period.getHours()+\":\"+ props.period.getMinutes()}</span>\r\n\r\n\r\n            </p>\r\n            <div className=\"p\">\r\n                <span className=\"grade\">{props.grade_num == undefined? props.grade_text:props.grade_num}</span>\r\n                <span className=\"SubjectText\" style={{color:\"#565656\", display:\"flex\", justifyContent:\"flex-end\", flexDirection:\"column\"}}><span style={{display:\"block\",position:\"relative\",bottom:\"0\" }}>{props.exeptions == undefined? \"\":props.exeptions + declOfNum(props.exeptions, [\" ошибка\", \" ошибки\", \" ошибок\"])}</span></span>\r\n            </div>\r\n\r\n            \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface GradeSubject{\r\n    subject:string;\r\n    grades:Array<any>\r\n}\r\n\r\nexport const GradeSubjectCard : React.FC<GradeSubject> = (props) => {\r\n\r\n    let classNames = [\"grayGrade\",\"grayGrade\",\"grayGrade\",\"purpleGrade\",\"purpleGrade\"]\r\n    let grades = new Array()\r\n\r\n    props.grades.forEach((el:any) => {\r\n        grades.push(<span className={classNames[el-1]}>{\"  \"+ el +\"   \"}</span>)\r\n      })\r\n\r\n    return (\r\n        <div className=\"SbCard\">\r\n            <p className=\"sbp\">\r\n                <span className=\"SubjectText\">{props.subject}</span><br/>\r\n                {grades}\r\n            </p>\r\n        </div>\r\n    );\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getSubjectInfo.ts",[],["229","230"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\childContext.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\childLobbyContentRouter.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\subjectDetail.tsx",["231","232"],"import react, {useContext} from \"react\";\r\n\r\nimport {LessonWidget} from \"../../uiKit/lessonWidget\";\r\n\r\nimport \"../css/subject-detail.css\"\r\n\r\nimport {useQuery} from \"@apollo/client\";\r\n\r\nimport {lessonInfoQuery} from \"../../QUERIES/getLessonInfo\"\r\n\r\nimport {ChildContext} from \"./childContext\";\r\nimport {\r\n    useParams, Switch, Route, useRouteMatch, Link\r\n} from \"react-router-dom\";\r\nimport {LessonDetails} from \"./lessonDetails\";\r\nimport { create } from \"domain\";\r\n\r\n\r\ninterface IEParams{\r\n    id:string;\r\n}\r\n\r\ninterface IESubjectDetail{\r\n    isTeacher?:boolean;\r\n}\r\n\r\ninterface IECreationButton{\r\n    link:string;\r\n}\r\n\r\ninterface QueryData{\r\n    node: {\r\n        name:string,\r\n        descr:string,\r\n        testsLen:number,\r\n        materialsLen:number,\r\n        timeLesson:string,\r\n        id:string\r\n    }\r\n}\r\n\r\nfunction parseQuery(data:QueryData[], path:string){\r\n    console.log(data, \"data\")\r\n    let res = []\r\n    for (let node of data){\r\n        res.push(\r\n            <Link to={`${path}/${node.node.id}`}>\r\n                <LessonWidget\r\n                    theme={node.node.name}\r\n                    date={node.node.timeLesson}\r\n                    descr={node.node.descr}\r\n                    materialsLen={node.node.materialsLen}\r\n                    testsLen={node.node.testsLen}\r\n                ></LessonWidget>\r\n            </Link>\r\n\r\n        )\r\n    }\r\n    return res;\r\n}\r\n\r\nconst CreateButton:react.FC<IECreationButton> = (props) => {\r\n    return <Link to={`${props.link}`}>\r\n        <div className=\"create-button__container\">\r\n            Создать\r\n        </div>\r\n    </Link>\r\n\r\n}\r\n\r\nexport const SubjectDetail:react.FC<IESubjectDetail> = () => {\r\n    const {createWorkLink} = useContext(ChildContext)\r\n    const {url} = useRouteMatch()\r\n    const {id} = useParams<IEParams>()\r\n    const {loading, data} = useQuery(lessonInfoQuery, {variables:{id:id}});\r\n    if (loading) return <div>loading..</div>\r\n    console.log(data)\r\n    let res = parseQuery(data.subjectClass.lessonSet.edges, url)\r\n    return <Switch>\r\n        <Route path={`${url}/:id`}>\r\n            <LessonDetails></LessonDetails>\r\n        </Route>\r\n        <Route path={url}>\r\n            <div className=\"subject-detail__container\">\r\n                <div className=\"subject-detail__heading\">\r\n                    <p>\r\n                        {`${data.subjectClass.name}, ${data.subjectClass.group.name}`}\r\n                    </p>\r\n                    {\r\n                    createWorkLink != \"\" ? <CreateButton link={createWorkLink}></CreateButton> : <div></div>\r\n                    }\r\n                </div>\r\n                {res}\r\n            </div>\r\n        </Route>\r\n    </Switch> \r\n\r\n} ","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\lessonWidget.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getLessonInfo.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\lessonDetails.tsx",["233","234","235"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\editor.jsx",["236"],"import React, {useEffect, useState} from \"react\";\r\n\r\nimport {CKEditor} from \"@ckeditor/ckeditor5-react\";\r\n\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\n\r\nimport \"./css/editor.css\"\r\n\r\nexport const Editor = (props) => {\r\n    useEffect(() => {\r\n        let a = document.getElementsByClassName(\"ck-editor__top\")[0]\r\n        if (props.child) {\r\n            a.style = \"display:none!important\";\r\n        }\r\n    })\r\n\r\n    return <CKEditor\r\n        className=\"editor\"\r\n        editor={ClassicEditor}\r\n        data = {props.content}\r\n        disabled = {props.child}\r\n        config = {\r\n            {\r\n                \r\n            }\r\n        }\r\n        \r\n    >\r\n    </CKEditor>\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\materialCard.tsx",["237"],"import react from \"react\";\r\n\r\nimport \"./css/material-card.css\"\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\ninterface IEMaterialCard{\r\n    name:string;\r\n    link:string;\r\n}\r\n\r\nexport const MaterialCard:react.FC<IEMaterialCard> = (props) => {\r\n    return <a href={\"http://\"+props.link}>\r\n            <div className=\"material-card__container\">\r\n        <div className=\"material-card__header\">\r\n            {props.name}\r\n        </div>\r\n        <div className=\"material-card__content\">\r\n            {props.link}\r\n        </div>\r\n    </div>\r\n    </a>    \r\n\r\n}",["238","239"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\testCard.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getLessonDetails.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\LobbyContentRouter.tsx",["240","241","242"],"import react, {useState} from \"react\"\r\n\r\nimport \"../css/lobby.css\";\r\n\r\nimport {\r\n    useParams, useRouteMatch, Link, Switch, Route, Redirect\r\n} from \"react-router-dom\"\r\n\r\n\r\nimport {\r\n    IEGetParams,\r\n    IEMenuItem\r\n} from \"./interfaces\"\r\n\r\nimport {ChildContext} from \"./childContext\";\r\nimport {ChildLobbyContentRouter} from \"./childLobbyContentRouter\"\r\nimport {TeacherLobbyContentRouter} from \"./teacherLobbyContentRouter\";\r\n\r\ninterface IELobby{\r\n    items: Map<string, IEMenuItem>,\r\n    ContentRouter: react.ReactNode,\r\n    defaultPath:string,\r\n    createWork:string\r\n}\r\n\r\nexport const LobbyContentRouter:react.FC = () => {\r\n    let items: Map<string, IEMenuItem>;\r\n    const {url} = useRouteMatch()\r\n    const {type} = useParams<IEGetParams>();\r\n    switch (type) {\r\n        case \"child\":\r\n            items = new Map([\r\n                [\"subjects\", {name: \"Предметы\"}],\r\n                [\"homework\", {name: \"Домашняя работа\"}],\r\n                [\"marks\", {name: \"Оценки\"}],\r\n                [\"add-material\", {name: \"Доп. материал\"}]\r\n            ]);\r\n\r\n            return <Lobby createWork=\"\" defaultPath=\"subjects\" items={items} ContentRouter={\r\n                <ChildLobbyContentRouter></ChildLobbyContentRouter>}></Lobby>\r\n        case \"teacher\":\r\n            items = new Map([\r\n                [\"my-classes\", {name: \"Мои классы\"}],\r\n                [\"create-work\", {name:\"Создать работу\"}],\r\n                [\"check-works\", {name:\"Проверить работы\"}],\r\n                [\"works-archieve\", {name: \"Архив работ\"}]\r\n            ])\r\n            return <Lobby createWork={`${url}/create-work`} defaultPath=\"my-classes\" items={items} ContentRouter={\r\n                <TeacherLobbyContentRouter></TeacherLobbyContentRouter>\r\n            }></Lobby>\r\n    }\r\n    return <div>error</div>\r\n}\r\n\r\nexport const Lobby:react.FC<IELobby> = (props) => {\r\n    const [activeName, setActiveName] = useState(props.defaultPath)\r\n    const {url} = useRouteMatch();\r\n    const {id, type, action} = useParams<IEGetParams>();\r\n\r\n    let widgets: react.ReactNode[] = [];\r\n    for (let item of props.items){\r\n        widgets.push(\r\n            <Link to={`${url}/${item[0]}`}>\r\n                <div className={`${activeName == item[0] ? \"active\" : \"\"}`} key={item[1].name}>\r\n                    {item[1].name}\r\n                </div>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    return <ChildContext.Provider value={{id, setActiveName, createWorkLink:props.createWork}}>\r\n        <div className=\"lobby__container\">\r\n        <div className=\"lobby__menu\">\r\n            <div className=\"lobby__heading\">\r\n                EvgenApp\r\n            </div>\r\n            <div className=\"lobby-menu__content\">\r\n                {widgets}\r\n            </div>\r\n            <div className=\"company\">© Gladio. Dev</div>\r\n        </div>\r\n        <div className=\"lobby__content\">\r\n            <Switch>\r\n                <Route path={`${url}/:type`}>\r\n                    {props.ContentRouter}\r\n                </Route>\r\n                <Route path={`${url}/`}>\r\n                    <Redirect to={`${url}/${props.defaultPath}`}></Redirect>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    </div>\r\n    </ChildContext.Provider>\r\n     \r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\teacherLobbyContentRouter.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\teacherClasses.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\teacherClassCard.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getTeacherSubjects.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\generated\\graphql.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\createMaterial.tsx",["243","244","245"],"import react, {useState} from \"react\";\r\n\r\n\r\nimport \"../css/CreateMaterial.css\"\r\n\r\nimport {MyToogleButton} from \"../../uiKit/toggleButton\";\r\n\r\nimport {Switch, Route, useRouteMatch, useParams, useHistory} from \"react-router-dom\";\r\n\r\nimport {DefaultInput} from \"../../uiKit/Inputs\";\r\nimport {DefaultButton} from \"../../uiKit/Buttons\";\r\n\r\nimport {Editor} from \"../../uiKit/editor\";\r\n\r\nimport {\r\n    useMaterialQuery, \r\n    useChangeMaterialMutation, \r\n    useAddMaterialMutation\r\n} from \"../../generated/graphql\";\r\n\r\nimport cross from \"../../images/cross.svg\";\r\n\r\ninterface MaterialCreation{\r\n    id:string;\r\n    name?:string;\r\n    data?:string;\r\n    type?:string;\r\n    materialId?:string;\r\n} \r\n\r\ninterface MaterialParams{\r\n    type:string;\r\n}\r\n\r\n\r\n\r\nfunction returnRedaction(history:any, link:string){\r\n    let splittedLink = link.split(\"/\");\r\n    history.push(splittedLink.slice(0, splittedLink.length-2).join(\"/\"))\r\n}\r\n\r\nconst LinkMaterial:react.FC<MaterialCreation> = (props) => {\r\n    console.log(props)\r\n    const [name, setName] = useState(props.name)\r\n    const [link, setLink] = useState(props.data)\r\n    \r\n    const {url} = useRouteMatch();\r\n    const history = useHistory()\r\n    const [pushLink] = useAddMaterialMutation();\r\n    const [updateLink] = useChangeMaterialMutation();\r\n    return <div className=\"link-material__container\">\r\n        <p className=\"material-creation__text\">Название ссылки</p>\r\n        <DefaultInput value={name} class=\"material-creation__input\" handleChange={(e:any) => {\r\n            setName(e.target.value)}}\r\n        ></DefaultInput>\r\n        <p className=\"material-creation__text\">Ссылка</p>\r\n        <DefaultInput value={link} class=\"material-creation__input\" handleChange={(e:any) => {\r\n            setLink(e.target.value)\r\n        }}></DefaultInput>\r\n        <DefaultButton handleClick={() => {\r\n            props.materialId == undefined ? \r\n            pushLink({variables:{id:props.id, data:link!, type:\"link\", name:name!}}) :\r\n            updateLink({variables:{\r\n                id:props.materialId,\r\n                data:link!,\r\n                name:name!\r\n                }})\r\n            returnRedaction(history, url);\r\n        }}>Сохранить</DefaultButton>\r\n    </div>\r\n}\r\n\r\nconst MaterialMaterial:react.FC<MaterialCreation> = () => {\r\n    return <div className=\"link-material__container\">\r\n        <p className=\"material-creation__text\">Название</p>\r\n        <DefaultInput class=\"material-creation__input\"></DefaultInput>\r\n        <p className=\"material-creation__text\">Контент</p>\r\n        <Editor child={false}></Editor>\r\n        <DefaultButton handleClick={() => {}}>Сохранить</DefaultButton>\r\n    </div>\r\n}\r\n\r\nconst CreateMaterialWidgetContent:react.FC<MaterialCreation> = (props) => {\r\n    console.log(props, \"public props\")\r\n    const {type} = useParams<MaterialParams>();\r\n    let content = props.type! == \"link\" ? \r\n    <LinkMaterial \r\n        id={props.id}\r\n        name={props.name}\r\n        data={props.data}\r\n        materialId={props.materialId}\r\n    ></LinkMaterial> : \r\n    <MaterialMaterial\r\n    id={props.id}\r\n    name={props.name}\r\n    data={props.data}\r\n    ></MaterialMaterial>\r\n    switch (type) {\r\n        case \"link\":\r\n            content = <LinkMaterial id={props.id} materialId={props.materialId}></LinkMaterial>\r\n            break;\r\n        case \"material\":\r\n            content = <MaterialMaterial id={props.id}></MaterialMaterial>\r\n    }\r\n    return <div className=\"content-pading\">\r\n        {content}\r\n    </div> \r\n}\r\n\r\ninterface IEParams{\r\n    id?:string;\r\n}\r\n\r\nexport const CreateMaterialWidget:react.FC<MaterialCreation> = (props) => {\r\n    const {url} = useRouteMatch();\r\n    const {id} = useParams<IEParams>();\r\n    const {loading, data} = useMaterialQuery({variables:{id:id!}})\r\n    const history = useHistory();\r\n\r\n    if (loading) return <div>loading...</div>\r\n\r\n    return <div>\r\n\r\n\r\n        <div className=\"create-material__container-absolute\">\r\n        </div>\r\n        <div className=\"container-local__container\">\r\n            <div className=\"create-material__container-local\">\r\n            <div className=\"nav__container\">\r\n            { id == undefined ?    \r\n            <MyToogleButton handleChange = {() => {}} buttons = {[{name: \"ссылка\", link:`${url}/link`}, \r\n                        {name: \"материал\", link:`${url}/material`}]}></MyToogleButton> : <div></div>}\r\n            <img src={cross} alt=\"\" onClick={() => {returnRedaction(history, url)}}/>\r\n            </div>\r\n            \r\n            \r\n            <Switch>\r\n\r\n                <Route path={`${url}/:type`}>\r\n                    <CreateMaterialWidgetContent id={props.id} materialId={id}></CreateMaterialWidgetContent>\r\n                </Route>\r\n                <Route path={`${url}`}>\r\n                    <CreateMaterialWidgetContent id={props.id} \r\n                        data={data?.material?.data}\r\n                        name = {data?.material?.name}\r\n                        type = {data?.material?.Type} \r\n                        materialId = {id}\r\n                        ></CreateMaterialWidgetContent>    \r\n                </Route>\r\n            </Switch>\r\n            </div>\r\n        </div>\r\n    </div>\r\n     \r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\toggleButton.tsx",["246"],"import React, {useState} from 'react';\r\nimport \"./css/Buttons.css\"\r\nimport { ToggleButton, ToggleButtonGroup} from '@material-ui/lab';\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\ninterface IEButton {\r\n    name:string;\r\n    link:string;\r\n}\r\n\r\ninterface ToogleConfig{\r\n    handleChange:Function;\r\n    buttons:Array<IEButton>;\r\n}\r\n\r\n\r\n\r\nexport const MyToogleButton : React.FC<ToogleConfig> = (props) =>{\r\n    let [active, setActive] = useState(false)\r\n    const TGbtn = {\r\n        fontFamily:  \"'Montserrat', sans-serif\",\r\n        background: \"#FFFFFF\",\r\n        border: \"1px solid #F5F5F5\",\r\n        borderRadius: \"10px\",\r\n        fontSize: \"20px\",\r\n        color:\"#000000\",\r\n        outline:\"none!important;\",\r\n        padding:\"20px;\",\r\n        width: \"220px\"\r\n    }\r\n\r\n    const TGbtnActive = {\r\n        background: \"#F5F5F5\",\r\n        border: \"none\",\r\n        fontFamily:  \"'Montserrat', sans-serif\",\r\n        fontSize: \"20px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        letterSpacing: \"0.2px\",\r\n        color:\"#636363\",\r\n        borderRadius: \"10px\",\r\n        width: \"220px\"\r\n    }\r\n    const TGbtnGroup = {\r\n        border: \"none\",\r\n\r\n        background: \"#F5F5F5\",\r\n        borderRadius: \"10px\"\r\n        \r\n    }\r\n\r\n    let buttons = new  Array<JSX.Element>()\r\n    props.buttons.forEach((el) => {\r\n        buttons.push(\r\n            <Link to={el.link}>\r\n                <ToggleButton \r\n                onClick={(e) => setActive(!active)} \r\n                style={props.buttons.indexOf(el)==0?   active? TGbtn:TGbtnActive: !active? TGbtn:TGbtnActive} \r\n                value={el.name} aria-label={el.name}>\r\n                    {el.name}\r\n                </ToggleButton>\r\n            </Link>\r\n            \r\n            )\r\n      })\r\n    return(\r\n        <ToggleButtonGroup style={TGbtnGroup} orientation=\"horizontal\">\r\n            {buttons} \r\n        </ToggleButtonGroup>\r\n    );\r\n}\r\n","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\childTestCompletion\\emptyTask\\index.tsx",[],{"ruleId":"247","severity":1,"message":"248","line":7,"column":9,"nodeType":"249","messageId":"250","endLine":7,"endColumn":21},{"ruleId":"247","severity":1,"message":"251","line":22,"column":12,"nodeType":"249","messageId":"250","endLine":22,"endColumn":16},{"ruleId":"252","severity":1,"message":"253","line":25,"column":55,"nodeType":"254","messageId":"255","endLine":25,"endColumn":57},{"ruleId":"256","severity":1,"message":"257","line":41,"column":21,"nodeType":"258","endLine":41,"endColumn":35},{"ruleId":"256","severity":1,"message":"259","line":44,"column":21,"nodeType":"258","endLine":44,"endColumn":42},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"247","severity":1,"message":"264","line":1,"column":8,"nodeType":"249","messageId":"250","endLine":1,"endColumn":13},{"ruleId":"247","severity":1,"message":"265","line":5,"column":9,"nodeType":"249","messageId":"250","endLine":5,"endColumn":21},{"ruleId":"247","severity":1,"message":"266","line":9,"column":9,"nodeType":"249","messageId":"250","endLine":9,"endColumn":18},{"ruleId":"247","severity":1,"message":"267","line":1,"column":10,"nodeType":"249","messageId":"250","endLine":1,"endColumn":14},{"ruleId":"247","severity":1,"message":"268","line":3,"column":8,"nodeType":"249","messageId":"250","endLine":3,"endColumn":16},{"ruleId":"252","severity":1,"message":"253","line":15,"column":47,"nodeType":"254","messageId":"255","endLine":15,"endColumn":49},{"ruleId":"252","severity":1,"message":"269","line":18,"column":42,"nodeType":"254","messageId":"255","endLine":18,"endColumn":44},{"ruleId":"247","severity":1,"message":"270","line":1,"column":16,"nodeType":"249","messageId":"250","endLine":1,"endColumn":24},{"ruleId":"247","severity":1,"message":"268","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":16},{"ruleId":"247","severity":1,"message":"271","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":25,"column":53,"nodeType":"254","messageId":"255","endLine":25,"endColumn":55},{"ruleId":"252","severity":1,"message":"253","line":27,"column":56,"nodeType":"254","messageId":"255","endLine":27,"endColumn":58},{"ruleId":"272","severity":1,"message":"273","line":33,"column":79,"nodeType":"258","endLine":33,"endColumn":99},{"ruleId":"247","severity":1,"message":"274","line":37,"column":11,"nodeType":"249","messageId":"250","endLine":37,"endColumn":23},{"ruleId":"275","severity":1,"message":"276","line":17,"column":9,"nodeType":"249","messageId":"250","endLine":17,"endColumn":19},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"247","severity":1,"message":"277","line":14,"column":27,"nodeType":"249","messageId":"250","endLine":14,"endColumn":31},{"ruleId":"247","severity":1,"message":"278","line":7,"column":9,"nodeType":"249","messageId":"250","endLine":7,"endColumn":17},{"ruleId":"247","severity":1,"message":"279","line":8,"column":9,"nodeType":"249","messageId":"250","endLine":8,"endColumn":19},{"ruleId":"247","severity":1,"message":"280","line":12,"column":9,"nodeType":"249","messageId":"250","endLine":12,"endColumn":25},{"ruleId":"247","severity":1,"message":"281","line":26,"column":9,"nodeType":"249","messageId":"250","endLine":26,"endColumn":14},{"ruleId":"247","severity":1,"message":"282","line":41,"column":21,"nodeType":"249","messageId":"250","endLine":41,"endColumn":26},{"ruleId":"260","replacedBy":"283"},{"ruleId":"262","replacedBy":"284"},{"ruleId":"247","severity":1,"message":"278","line":8,"column":5,"nodeType":"249","messageId":"250","endLine":8,"endColumn":13},{"ruleId":"247","severity":1,"message":"285","line":14,"column":9,"nodeType":"249","messageId":"250","endLine":14,"endColumn":25},{"ruleId":"247","severity":1,"message":"286","line":22,"column":11,"nodeType":"249","messageId":"250","endLine":22,"endColumn":20},{"ruleId":"247","severity":1,"message":"268","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":16},{"ruleId":"247","severity":1,"message":"287","line":10,"column":10,"nodeType":"249","messageId":"250","endLine":10,"endColumn":17},{"ruleId":"252","severity":1,"message":"253","line":45,"column":51,"nodeType":"254","messageId":"255","endLine":45,"endColumn":53},{"ruleId":"252","severity":1,"message":"253","line":45,"column":101,"nodeType":"254","messageId":"255","endLine":45,"endColumn":103},{"ruleId":"252","severity":1,"message":"253","line":47,"column":40,"nodeType":"254","messageId":"255","endLine":47,"endColumn":42},{"ruleId":"252","severity":1,"message":"253","line":47,"column":68,"nodeType":"254","messageId":"255","endLine":47,"endColumn":70},{"ruleId":"272","severity":1,"message":"273","line":52,"column":13,"nodeType":"258","endLine":52,"endColumn":48},{"ruleId":"252","severity":1,"message":"253","line":82,"column":60,"nodeType":"254","messageId":"255","endLine":82,"endColumn":62},{"ruleId":"252","severity":1,"message":"253","line":88,"column":56,"nodeType":"254","messageId":"255","endLine":88,"endColumn":58},{"ruleId":"288","severity":1,"message":"289","line":88,"column":186,"nodeType":"254","messageId":"290","endLine":88,"endColumn":187},{"ruleId":"252","severity":1,"message":"253","line":89,"column":34,"nodeType":"254","messageId":"255","endLine":89,"endColumn":36},{"ruleId":"291","severity":1,"message":"292","line":93,"column":84,"nodeType":"293","endLine":93,"endColumn":96},{"ruleId":"252","severity":1,"message":"253","line":121,"column":60,"nodeType":"254","messageId":"255","endLine":121,"endColumn":62},{"ruleId":"252","severity":1,"message":"253","line":126,"column":58,"nodeType":"254","messageId":"255","endLine":126,"endColumn":60},{"ruleId":"252","severity":1,"message":"253","line":127,"column":221,"nodeType":"254","messageId":"255","endLine":127,"endColumn":223},{"ruleId":"294","severity":1,"message":"295","line":144,"column":18,"nodeType":"296","messageId":"297","endLine":144,"endColumn":29,"fix":"298"},{"ruleId":"260","replacedBy":"299"},{"ruleId":"262","replacedBy":"300"},{"ruleId":"247","severity":1,"message":"301","line":16,"column":10,"nodeType":"249","messageId":"250","endLine":16,"endColumn":16},{"ruleId":"252","severity":1,"message":"269","line":90,"column":36,"nodeType":"254","messageId":"255","endLine":90,"endColumn":38},{"ruleId":"247","severity":1,"message":"302","line":1,"column":28,"nodeType":"249","messageId":"250","endLine":1,"endColumn":35},{"ruleId":"247","severity":1,"message":"303","line":67,"column":10,"nodeType":"249","messageId":"250","endLine":67,"endColumn":27},{"ruleId":"252","severity":1,"message":"253","line":257,"column":30,"nodeType":"254","messageId":"255","endLine":257,"endColumn":32},{"ruleId":"275","severity":1,"message":"270","line":1,"column":27,"nodeType":"249","messageId":"250","endLine":1,"endColumn":35},{"ruleId":"247","severity":1,"message":"304","line":5,"column":9,"nodeType":"249","messageId":"250","endLine":5,"endColumn":13},{"ruleId":"260","replacedBy":"305"},{"ruleId":"262","replacedBy":"306"},{"ruleId":"247","severity":1,"message":"307","line":58,"column":16,"nodeType":"249","messageId":"250","endLine":58,"endColumn":20},{"ruleId":"247","severity":1,"message":"308","line":58,"column":22,"nodeType":"249","messageId":"250","endLine":58,"endColumn":28},{"ruleId":"252","severity":1,"message":"253","line":64,"column":47,"nodeType":"254","messageId":"255","endLine":64,"endColumn":49},{"ruleId":"252","severity":1,"message":"253","line":61,"column":30,"nodeType":"254","messageId":"255","endLine":61,"endColumn":32},{"ruleId":"252","severity":1,"message":"253","line":86,"column":31,"nodeType":"254","messageId":"255","endLine":86,"endColumn":33},{"ruleId":"252","severity":1,"message":"253","line":130,"column":18,"nodeType":"254","messageId":"255","endLine":130,"endColumn":20},{"ruleId":"252","severity":1,"message":"253","line":59,"column":49,"nodeType":"254","messageId":"255","endLine":59,"endColumn":51},"@typescript-eslint/no-unused-vars","'DefaultInput' is defined but never used.","Identifier","unusedVar","'path' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component Login_inputs must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Registration_inputs must be in PascalCase or SCREAMING_SNAKE_CASE","no-native-reassign",["309"],"no-negated-in-lhs",["310"],"'react' is defined but never used.","'Registration' is defined but never used.","'EmptyTask' is defined but never used.","'type' is defined but never used.","'ReactDOM' is defined but never used.","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'CSSProperties' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ToogleConfig' is defined but never used.","no-unused-vars","'ChildLobby' is defined but never used.","'data' is assigned a value but never used.","'useQuery' is defined but never used.","'getUserOrg' is defined but never used.","'IEDataProcessing' is defined but never used.","'links' is assigned a value but never used.","'error' is assigned a value but never used.",["309"],["310"],"'subjectInfoQuery' is defined but never used.","'QueryData' is defined but never used.","'TaskRow' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","react/style-prop-object","Style prop value must be an object","JSXAttribute","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","NewExpression","useLiteral",{"range":"311","text":"312"},["309"],["310"],"'create' is defined but never used.","'Context' is defined but never used.","'parseTeacherTests' is defined but never used.","'Link' is defined but never used.",["309"],["310"],"'type' is assigned a value but never used.","'action' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[5534,5545],"[]"]