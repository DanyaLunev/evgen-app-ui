[{"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\registration.tsx":"1","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\index.tsx":"2","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Inputs.tsx":"3","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Buttons.tsx":"4"},{"size":2349,"mtime":1611760475306,"results":"5","hashOfConfig":"6"},{"size":223,"mtime":1611760475305,"results":"7","hashOfConfig":"6"},{"size":634,"mtime":1611760475309,"results":"8","hashOfConfig":"6"},{"size":1044,"mtime":1611760475308,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"12khao8",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"12"},"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\registration.tsx",[],["21","22"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\index.tsx",["23"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Inputs.tsx",["24","25","26","27"],"import { type } from 'os';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./css/InputField.css\"\r\n\r\ninterface InputsConfig{\r\n    placeHolder?:string;\r\n    handleChange?:Function;\r\n    type?: string;\r\n    class?:string;\r\n};\r\n\r\nexport const DefaultInput : React.FC<InputsConfig> = (props) => {   \r\n    const classes = \"myInput \" + (props.class == undefined ? \"\" : props.class); \r\n    return (\r\n        <input className={classes} placeholder={props.placeHolder} onChange={\r\n            (event)=> props.handleChange != undefined ? props.handleChange(event) : {}} \r\n            type={props.type}></input>\r\n    );\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Buttons.tsx",["28","29","30","31","32","33","34"],"import React, {useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./css/Buttons.css\"\r\nimport download from \"../images/download.svg\"\r\nimport { CSSProperties } from 'react';\r\n\r\n\r\ninterface ButtonsConfig{\r\n    text?:String;\r\n    handleClick:Function;\r\n    style?:boolean;\r\n    class?:string;\r\n    children?:React.ReactNode;\r\n};\r\n\r\nexport const DefaultButton : React.FC<ButtonsConfig> = (props) => {\r\n    const btnStyle = {\r\n        width:\"30vw\",\r\n        height:\"5vw\"\r\n    };\r\n    const classes = \"defaultButton \" + (props.class == undefined ? \"\" : props.class);\r\n    return (\r\n        <button className={classes} style={props.style == true? btnStyle:{}} onClick={()=> props.handleClick()}>{props.children}</button>\r\n    );\r\n}\r\n\r\nexport const DownloadButton : React.FC<ButtonsConfig> = (props) => {\r\n    return (\r\n        <button className=\"DownloadButton\" onClick={()=> props.handleClick()}><img src={download}></img></button>\r\n    );\r\n}\r\n\r\ninterface ToogleConfig{\r\n    handleChange:Function;\r\n    buttons:Array<string>;\r\n}\r\n\r\n\r\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":13},{"ruleId":"39","severity":1,"message":"43","line":1,"column":10,"nodeType":"41","messageId":"42","endLine":1,"endColumn":14},{"ruleId":"39","severity":1,"message":"44","line":3,"column":8,"nodeType":"41","messageId":"42","endLine":3,"endColumn":16},{"ruleId":"45","severity":1,"message":"46","line":14,"column":47,"nodeType":"47","messageId":"48","endLine":14,"endColumn":49},{"ruleId":"45","severity":1,"message":"49","line":17,"column":42,"nodeType":"47","messageId":"48","endLine":17,"endColumn":44},{"ruleId":"39","severity":1,"message":"50","line":1,"column":16,"nodeType":"41","messageId":"42","endLine":1,"endColumn":24},{"ruleId":"39","severity":1,"message":"44","line":2,"column":8,"nodeType":"41","messageId":"42","endLine":2,"endColumn":16},{"ruleId":"39","severity":1,"message":"51","line":5,"column":10,"nodeType":"41","messageId":"42","endLine":5,"endColumn":23},{"ruleId":"45","severity":1,"message":"46","line":21,"column":53,"nodeType":"47","messageId":"48","endLine":21,"endColumn":55},{"ruleId":"45","severity":1,"message":"46","line":23,"column":56,"nodeType":"47","messageId":"48","endLine":23,"endColumn":58},{"ruleId":"52","severity":1,"message":"53","line":29,"column":79,"nodeType":"54","endLine":29,"endColumn":99},{"ruleId":"39","severity":1,"message":"55","line":33,"column":11,"nodeType":"41","messageId":"42","endLine":33,"endColumn":23},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"@typescript-eslint/no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'type' is defined but never used.","'ReactDOM' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'CSSProperties' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ToogleConfig' is defined but never used.","no-global-assign","no-unsafe-negation"]