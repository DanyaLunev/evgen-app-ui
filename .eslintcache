[{"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\registration.tsx":"1","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\index.tsx":"2","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Inputs.tsx":"3","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Buttons.tsx":"4","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\routing.jsx":"5","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\login-inputs.tsx":"6","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\registration-inputs.tsx":"7","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\client.js":"8","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\interfaces.ts":"9","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\MUTATIONS\\registerUser.ts":"10","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\MUTATIONS\\getToken.ts":"11","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\wirteToken.ts":"12","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\checkToken.ts":"13","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\organisations.tsx":"14","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\orgCard.tsx":"15","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\getToken.ts":"16","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getOrg.ts":"17","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\childSubjectWidget.tsx":"18","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Cards.tsx":"19","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getSubjectInfo.ts":"20","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\childContext.ts":"21","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\childLobbyContentRouter.tsx":"22","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\subjectDetail.tsx":"23","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\lessonWidget.tsx":"24","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getLessonInfo.ts":"25","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\lessonDetails.tsx":"26","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\editor.jsx":"27","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\materialCard.tsx":"28","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\testCard.tsx":"29","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getLessonDetails.ts":"30","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\LobbyContentRouter.tsx":"31","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\teacherLobbyContentRouter.tsx":"32","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\teacherClasses.tsx":"33","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\teacherClassCard.tsx":"34","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getTeacherSubjects.ts":"35"},{"size":2962,"mtime":1611771070492,"results":"36","hashOfConfig":"37"},{"size":266,"mtime":1611764456409,"results":"38","hashOfConfig":"37"},{"size":634,"mtime":1611760562261,"results":"39","hashOfConfig":"37"},{"size":1052,"mtime":1612305854580,"results":"40","hashOfConfig":"37"},{"size":793,"mtime":1612098626120,"results":"41","hashOfConfig":"37"},{"size":1235,"mtime":1611771070491,"results":"42","hashOfConfig":"37"},{"size":1339,"mtime":1611771070491,"results":"43","hashOfConfig":"37"},{"size":244,"mtime":1611426781332,"results":"44","hashOfConfig":"37"},{"size":72,"mtime":1611771070490,"results":"45","hashOfConfig":"37"},{"size":217,"mtime":1611771070489,"results":"46","hashOfConfig":"37"},{"size":198,"mtime":1611771070489,"results":"47","hashOfConfig":"37"},{"size":162,"mtime":1611771070488,"results":"48","hashOfConfig":"37"},{"size":85,"mtime":1611771070488,"results":"49","hashOfConfig":"37"},{"size":1881,"mtime":1612098626137,"results":"50","hashOfConfig":"37"},{"size":1041,"mtime":1612001486457,"results":"51","hashOfConfig":"37"},{"size":76,"mtime":1611839004045,"results":"52","hashOfConfig":"37"},{"size":595,"mtime":1612093476182,"results":"53","hashOfConfig":"37"},{"size":2282,"mtime":1612003167361,"results":"54","hashOfConfig":"37"},{"size":6078,"mtime":1611971375175,"results":"55","hashOfConfig":"37"},{"size":378,"mtime":1612002637695,"results":"56","hashOfConfig":"37"},{"size":157,"mtime":1612130645627,"results":"57","hashOfConfig":"37"},{"size":995,"mtime":1612096304729,"results":"58","hashOfConfig":"37"},{"size":2681,"mtime":1612130993509,"results":"59","hashOfConfig":"37"},{"size":2138,"mtime":1612019857272,"results":"60","hashOfConfig":"37"},{"size":333,"mtime":1612089889087,"results":"61","hashOfConfig":"37"},{"size":7263,"mtime":1612305434793,"results":"62","hashOfConfig":"37"},{"size":596,"mtime":1612097125989,"results":"63","hashOfConfig":"37"},{"size":555,"mtime":1612091771720,"results":"64","hashOfConfig":"37"},{"size":697,"mtime":1612091609047,"results":"65","hashOfConfig":"37"},{"size":356,"mtime":1612305423649,"results":"66","hashOfConfig":"37"},{"size":3300,"mtime":1612130772226,"results":"67","hashOfConfig":"37"},{"size":895,"mtime":1612106993713,"results":"68","hashOfConfig":"37"},{"size":1948,"mtime":1612126267317,"results":"69","hashOfConfig":"37"},{"size":1350,"mtime":1612122396861,"results":"70","hashOfConfig":"37"},{"size":370,"mtime":1612125431591,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},"12khao8",{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"75"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"75"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"118","usedDeprecatedRules":"75"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"75"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"75"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"87"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"75"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\registration.tsx",["157","158","159","160","161"],"import react from \"react\";\r\n\r\nimport \"../css/registration.css\";\r\n\r\nimport {DefaultButton} from \"../../uiKit/Buttons\";\r\n\r\nimport {DefaultInput} from \"../../uiKit/Inputs\";\r\n\r\nimport vkImg from \"../svg/VkImage.svg\";\r\nimport googleImg from \"../svg/googleImg.svg\";\r\n\r\nimport {Login_inputs} from \"./login-inputs\";\r\nimport {Registration_inputs} from \"./registration-inputs\";\r\n\r\nimport {\r\n    Link, Switch, Route, useRouteMatch, useLocation\r\n} from \"react-router-dom\";\r\n\r\nexport const Registration:react.FC = () => {\r\n    const {path, url} = useRouteMatch();\r\n    const location = useLocation();\r\n    console.log(location);\r\n    const isSign = location.pathname.split(\"/\").pop() == \"Login\";\r\n    return (\r\n    <div className=\"centered\">\r\n        <div className=\"registration__container\">\r\n            <div className=\"heading\">Добро пожаловать в EvgenApp</div>\r\n            <div className=\"toggle__reg\">\r\n                <Link to=\"Login\">                \r\n                    <div className={\"toggle-text \" + (isSign ? \"\" : \"disabled\")}>Вход</div>\r\n                </Link>\r\n                <Link to=\"Registration\">\r\n                    <div className={\"toggle-text \" + (isSign ? \"disabled\": \"\")}>Регистрация</div>\r\n                </Link>\r\n            </div>\r\n            <Switch>\r\n                <Route path={`${url}/Login`}>\r\n                    <Login_inputs></Login_inputs>\r\n                </Route>\r\n                <Route path={`${url}/Registration`}>\r\n                    <Registration_inputs></Registration_inputs>\r\n                </Route>\r\n            </Switch>\r\n            <div className=\"or-container\">\r\n                <div className=\"line\"></div>\r\n                <div className=\"or-content\">или</div>\r\n                <div className=\"line\"></div>\r\n            </div>\r\n            <DefaultButton handleClick={()=>{}} class=\"reg-btn vk-btn\">\r\n                <div className=\"vk-button\">\r\n                    <img src={vkImg} alt=\"\" className=\"vk-button__img\"/>\r\n                    <span className=\"vk-button__text\">\r\n                        <span>\r\n                        Войти с помощью VK\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            </DefaultButton>\r\n            <DefaultButton handleClick={()=>{}} class=\"reg-btn google-btn\">\r\n                <div className=\"vk-button\">\r\n                        <img src={googleImg} alt=\"\" className=\"vk-button__img\"/>\r\n                        <span className=\"vk-button__text\">\r\n                            <span className=\"google-text-color\">\r\n                            Войти с помощью Google\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n            </DefaultButton>\r\n        </div>\r\n    </div>\r\n    );\r\n}",["162","163"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\index.tsx",["164","165"],"import react from \"react\";\r\n\r\nimport ReactDom from \"react-dom\";\r\n\r\nimport {Registration} from \"./screens/content/registration\";\r\n\r\nimport {Routing} from \"./screens/content/routing\"\r\n\r\nReactDom.render(\r\n    <Routing></Routing>,\r\n    document.getElementById(\"root\")\r\n)","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Inputs.tsx",["166","167","168","169"],"import { type } from 'os';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./css/InputField.css\"\r\n\r\ninterface InputsConfig{\r\n    placeHolder?:string;\r\n    handleChange?:Function;\r\n    type?: string;\r\n    class?:string;\r\n};\r\n\r\nexport const DefaultInput : React.FC<InputsConfig> = (props) => {   \r\n    const classes = \"myInput \" + (props.class == undefined ? \"\" : props.class); \r\n    return (\r\n        <input className={classes} placeholder={props.placeHolder} onChange={\r\n            (event)=> props.handleChange != undefined ? props.handleChange(event) : {}} \r\n            type={props.type}></input>\r\n    );\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Buttons.tsx",["170","171","172","173","174","175","176"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\routing.jsx",["177"],"import React from \"react\";\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\"\r\nimport {\r\n    ApolloProvider\r\n} from \"@apollo/client\"\r\nimport client from \"../../client\"\r\n\r\nimport {Registration} from \"./registration\"\r\n\r\nimport {OrganisationList} from \"./organisations\";\r\n\r\nimport {ChildLobby} from \"./LobbyContentRouter\";\r\n\r\n\r\nexport const Routing = () => {\r\n    return <ApolloProvider client={client}>\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/enter-user\">\r\n                    <Registration></Registration>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <OrganisationList></OrganisationList>\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    </ApolloProvider>\r\n;\r\n}",["178","179"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\login-inputs.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\registration-inputs.tsx",["180"],"import React from \"react\"\r\nimport { DefaultButton } from \"../../uiKit/Buttons\"\r\nimport { DefaultInput } from \"../../uiKit/Inputs\"\r\n\r\nimport \"../css/inputs.css\"\r\n\r\nexport const Registration_inputs:React.FC = () =>{\r\n    return <div className=\"inputs_flex\">\r\n        <DefaultInput handleChange={() => {}} class=\"reg-input\" placeHolder=\"ФИО\"></DefaultInput>\r\n        <DefaultInput handleChange={() => {}} class=\"reg-input\" placeHolder=\"E-mail\"></DefaultInput>\r\n        <DefaultInput handleChange={() => {}} class=\"reg-input\" placeHolder=\"Password\"></DefaultInput>\r\n        <DefaultButton handleClick={()=>{}} class=\"reg-btn\">\r\n            Зарегистрироваться\r\n        </DefaultButton>\r\n    </div>\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\client.js",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\interfaces.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\MUTATIONS\\registerUser.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\MUTATIONS\\getToken.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\wirteToken.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\checkToken.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\organisations.tsx",["181","182"],"import react from \"react\"\r\n\r\nimport {OrgCard} from \"../../uiKit/orgCard\";\r\n\r\nimport \"../css/org-list.css\"\r\n\r\nimport {useQuery} from \"@apollo/client\";\r\nimport {getUserOrg} from \"../../QUERIES/getOrg\"\r\n\r\nimport {getToken} from \"../../LocalStorageInteraction/getToken\";\r\n\r\nimport {IEDataProcessing} from \"./interfaces\"\r\n\r\nimport {\r\n    Route, Switch\r\n} from \"react-router-dom\";\r\n\r\nimport {\r\n    LobbyContentRouter\r\n} from \"./childLobby\";\r\n\r\nfunction Processing(arrayProcessed:IEDataProcessing[], role:string) {\r\n    let result = []\r\n    let links = []\r\n    for (const childProfile of arrayProcessed){\r\n        result.push(<OrgCard\r\n            subjects={childProfile.node.org.subjects}\r\n            name={childProfile.node.org.name}\r\n            childLen={childProfile.node.org.childrenLength}\r\n            classesLen={childProfile.node.org.classesLength}\r\n            role={role}\r\n            id={childProfile.node.id}\r\n        ></OrgCard>);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const OrganisationList:react.FC = () =>{\r\n    const {loading, error, data} = useQuery(getUserOrg, {variables:{\r\n        token:getToken()\r\n    }});\r\n    if (loading) return <div>loading...</div>\r\n    console.log(data)\r\n    return <Switch>\r\n        <Route path=\"/:id/:type/\">\r\n            <LobbyContentRouter></LobbyContentRouter>\r\n        </Route>\r\n        <Route path=\"/\">\r\n            <div className=\"centered\">\r\n                <div className=\"org-list__public\">\r\n                    <div className=\"heading\">Мои организации</div>\r\n                    <div className=\"org-list__container\">\r\n                        {Processing(data.userInfo.profile.childSet.edges, \"child\")}\r\n                        {Processing(data.userInfo.profile.teacherSet.edges, \"teacher\")}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Route>\r\n\r\n    </Switch>\r\n\r\n\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\orgCard.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\LocalStorageInteraction\\getToken.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getOrg.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\childSubjectWidget.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\Cards.tsx",["183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./css/Cards.css\";\r\nimport image1 from \"../images/cardImg.svg\";\r\nimport image2 from \"../images/cardImg1.svg\";\r\nimport image3 from \"../images/cardImg2.svg\";\r\nimport image4 from \"../images/cardImg3.svg\";\r\nimport image5 from \"../images/cardImg4.svg\";\r\nimport {DefaultButton} from \"./Buttons\"\r\nimport { TaskRow } from './ChildTestDetail';\r\n\r\n\r\ninterface SubjectConfig{\r\n    teacher:string;\r\n    subject:string;\r\n    date?:Date;\r\n    newTasks?:number;\r\n    class:string;\r\n    onClick:Function;\r\n};\r\n\r\nexport const SubjectCard : React.FC<SubjectConfig> = (props) => {\r\n    function getRandomInt(min:number, max:number) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min)) + min; \r\n      }\r\n\r\n    let image;\r\n\r\n    let images = [image5,image1,image2,image3,image4]\r\n\r\n    image = images[getRandomInt(0,images.length)]\r\n    return (\r\n        <button className=\"SbCard\" onClick={(event)=>props.onClick(event)}>\r\n            <div className=\"card__content\">\r\n                <div className=\"subDiv\">\r\n                    <div className=\"group\">\r\n                        <div className=\"SubjectText\">{props.subject}</div>\r\n                        <div className=\"TeacherText\">{props.teacher}</div>\r\n                    </div>\r\n                    <div className=\"back_label\">Класс: <span className=\"colorized\">{props.class}</span></div>\r\n                </div>\r\n                <div className=\"taskDiv\">\r\n                    <div className={props.newTasks==undefined? \"noTasks\":\"newTasks\"}>{props.newTasks==undefined? \"Нет заданий\":`Новое задание(${props.newTasks})`}</div>\r\n                    <div className=\"TeacherText\">\r\n                        {props.newTasks==undefined? \"\": props.date == undefined? \"\":\"до \" + props.date?.getDate() + \".\" + props.date?.getMonth()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <img className=\"image\" src={image}></img>\r\n            \r\n\r\n        </button>\r\n    );\r\n}\r\n\r\ninterface TaskConfig{\r\n    subject:string;\r\n    theme:string;\r\n    teacher:string;\r\n    period?:Date;\r\n    questions:number;\r\n    minuts?:number;\r\n    task:Function;\r\n}\r\n\r\nfunction declOfNum(number:number, words:Array<string>) {  \r\n    return words[(number % 100 > 4 && number % 100 < 20) ? 2 : [2, 0, 1, 1, 1, 2][(number % 10 < 5) ? number % 10 : 5]];\r\n}\r\n\r\nexport const TaskCard :React.FC<TaskConfig> = (props) => {\r\n\r\n\r\n    return(\r\n        <div className=\"tkCard\">\r\n            <span className=\"SubjectText\">{props.subject}</span>\r\n            <p>\r\n                <span className=\"noTasks\">{props.theme}</span><br></br>\r\n                <span className=\"TeacherText\">{props.teacher}</span><br></br>\r\n                <span className=\"TeacherText\">{props.period==undefined? \"не ограничено\": \"до \" + props.period?.getDate() + \".\" + props.period?.getMonth()+\".\"+props.period?.getFullYear()+\"    \"+props.period.getHours()+\":\"+ props.period.getMinutes()}</span>\r\n\r\n\r\n            </p>\r\n            <p>\r\n                <span className=\"noTasks\">{props.questions.toString() + declOfNum(props.questions, [\" вопрос\",\" вопроса\",\" вопросов\"])}</span><br></br>\r\n                <span className=\"noTasks\">{props.minuts==undefined? \"Время на выполнение неограничено\": props.minuts.toString() + declOfNum(props.minuts,[' минута', ' минуты', ' минут' + \" \"])}\r\n                    {props.minuts==undefined? \"\":<span className=\"TeacherText\"> на выполнение</span>}\r\n                </span>\r\n            </p>\r\n\r\n            <DefaultButton text=\"начать выполнение\" handleClick={()=>props.task()} style={true}></DefaultButton>\r\n            \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface GradeConfig{\r\n    subject:string;\r\n    theme:string;\r\n    teacher:string;\r\n    period?:Date;\r\n    grade_num?:number;\r\n    grade_text?:string;\r\n    exeptions?:number;\r\n}\r\n\r\nexport const GradeCard :React.FC<GradeConfig> = (props) => {\r\n\r\n    function declOfNum(number:number, words:Array<string>) {  \r\n        return words[(number % 100 > 4 && number % 100 < 20) ? 2 : [2, 0, 1, 1, 1, 2][(number % 10 < 5) ? number % 10 : 5]];\r\n    }\r\n    return(\r\n        <div className=\"tkCard\">\r\n            <span className=\"SubjectText\">{props.subject}</span>\r\n            <p>\r\n                <span className=\"noTasks\">{props.theme}</span><br></br>\r\n                <span className=\"TeacherText\">{props.teacher}</span><br></br>\r\n                <span className=\"TeacherText\">{props.period==undefined? \"не ограничено\": \"до \" + props.period?.getDate() + \".\" + props.period?.getMonth()+\".\"+props.period?.getFullYear()+\"    \"+props.period.getHours()+\":\"+ props.period.getMinutes()}</span>\r\n\r\n\r\n            </p>\r\n            <div className=\"p\">\r\n                <span className=\"grade\">{props.grade_num == undefined? props.grade_text:props.grade_num}</span>\r\n                <span className=\"SubjectText\" style={{color:\"#565656\", display:\"flex\", justifyContent:\"flex-end\", flexDirection:\"column\"}}><span style={{display:\"block\",position:\"relative\",bottom:\"0\" }}>{props.exeptions == undefined? \"\":props.exeptions + declOfNum(props.exeptions, [\" ошибка\", \" ошибки\", \" ошибок\"])}</span></span>\r\n            </div>\r\n\r\n            \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface GradeSubject{\r\n    subject:string;\r\n    grades:Array<any>\r\n}\r\n\r\nexport const GradeSubjectCard : React.FC<GradeSubject> = (props) => {\r\n\r\n    let classNames = [\"grayGrade\",\"grayGrade\",\"grayGrade\",\"purpleGrade\",\"purpleGrade\"]\r\n    let grades = new Array()\r\n\r\n    props.grades.forEach((el:any) => {\r\n        grades.push(<span className={classNames[el-1]}>{\"  \"+ el +\"   \"}</span>)\r\n      })\r\n\r\n    return (\r\n        <div className=\"SbCard\">\r\n            <p className=\"sbp\">\r\n                <span className=\"SubjectText\">{props.subject}</span><br/>\r\n                {grades}\r\n            </p>\r\n        </div>\r\n    );\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getSubjectInfo.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\childContext.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\childLobbyContentRouter.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\subjectDetail.tsx",["199","200"],"import react, {useContext} from \"react\";\r\n\r\nimport {LessonWidget} from \"../../uiKit/lessonWidget\";\r\n\r\nimport \"../css/subject-detail.css\"\r\n\r\nimport {useQuery} from \"@apollo/client\";\r\n\r\nimport {lessonInfoQuery} from \"../../QUERIES/getLessonInfo\"\r\n\r\nimport {ChildContext} from \"./childContext\";\r\nimport {\r\n    useParams, Switch, Route, useRouteMatch, Link\r\n} from \"react-router-dom\";\r\nimport {LessonDetails} from \"./lessonDetails\";\r\nimport { create } from \"domain\";\r\n\r\n\r\ninterface IEParams{\r\n    id:string;\r\n}\r\n\r\ninterface IESubjectDetail{\r\n    isTeacher?:boolean;\r\n}\r\n\r\ninterface IECreationButton{\r\n    link:string;\r\n}\r\n\r\ninterface QueryData{\r\n    node: {\r\n        name:string,\r\n        descr:string,\r\n        testsLen:number,\r\n        materialsLen:number,\r\n        timeLesson:string,\r\n        id:string\r\n    }\r\n}\r\n\r\nfunction parseQuery(data:QueryData[], path:string){\r\n    console.log(data, \"data\")\r\n    let res = []\r\n    for (let node of data){\r\n        res.push(\r\n            <Link to={`${path}/${node.node.id}`}>\r\n                <LessonWidget\r\n                    theme={node.node.name}\r\n                    date={node.node.timeLesson}\r\n                    descr={node.node.descr}\r\n                    materialsLen={node.node.materialsLen}\r\n                    testsLen={node.node.testsLen}\r\n                ></LessonWidget>\r\n            </Link>\r\n\r\n        )\r\n    }\r\n    return res;\r\n}\r\n\r\nconst CreateButton:react.FC<IECreationButton> = (props) => {\r\n    return <Link to={`${props.link}`}>\r\n        <div className=\"create-button__container\">\r\n            Создать\r\n        </div>\r\n    </Link>\r\n\r\n}\r\n\r\nexport const SubjectDetail:react.FC<IESubjectDetail> = () => {\r\n    const {createWorkLink} = useContext(ChildContext)\r\n    const {url} = useRouteMatch()\r\n    const {id} = useParams<IEParams>()\r\n    const {loading, data} = useQuery(lessonInfoQuery, {variables:{id:id}});\r\n    if (loading) return <div>loading..</div>\r\n    console.log(data)\r\n    let res = parseQuery(data.subjectClass.lessonSet.edges, url)\r\n    return <Switch>\r\n        <Route path={`${url}/:id`}>\r\n            <LessonDetails></LessonDetails>\r\n        </Route>\r\n        <Route path={url}>\r\n            <div className=\"subject-detail__container\">\r\n                <div className=\"subject-detail__heading\">\r\n                    <p>\r\n                        {`${data.subjectClass.name}, ${data.subjectClass.group.name}`}\r\n                    </p>\r\n                    {\r\n                    createWorkLink != \"\" ? <CreateButton link={createWorkLink}></CreateButton> : <div></div>\r\n                    }\r\n                </div>\r\n                {res}\r\n            </div>\r\n        </Route>\r\n    </Switch> \r\n\r\n} ","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\lessonWidget.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getLessonInfo.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\lessonDetails.tsx",["201","202","203","204","205","206"],"import react, {useContext} from \"react\"\r\nimport {ChildContext} from \"./childContext\";\r\nimport \"../css/lesson-detail.css\"\r\n\r\nimport {Editor} from \"../../uiKit/editor\";\r\n\r\nimport {MaterialCard} from \"../../uiKit/materialCard\";\r\nimport {TestCard} from \"../../uiKit/testCard\";\r\n\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nimport {useQuery} from \"@apollo/client\";\r\n\r\nimport {lessonDetalsQuery} from \"../../QUERIES/getLessonDetails\"\r\nimport { IEGetParams } from \"./interfaces\";\r\nimport { TeacherClassCard } from \"../../uiKit/teacherClassCard\";\r\n\r\ninterface IEParams{\r\n    id:string;\r\n}\r\n\r\n\r\ninterface IEQuery{\r\n    name:string,\r\n    content:string,\r\n    descr:string,\r\n    typeLesson: {\r\n        name:string,\r\n        group:{\r\n            name:string\r\n        }\r\n    }\r\n    tests: {\r\n        name:string,\r\n        id:string,\r\n        taskLen:number,\r\n        deadline:string\r\n    }[]\r\n    materials: {\r\n        name:string,\r\n        data:string\r\n    }[]\r\n}\r\n\r\nfunction parseMaterials(data:IEQuery){\r\n    let res = []\r\n    for (let material of data.materials){\r\n        res.push(\r\n            <NewMaterialCard\r\n                name={material.data}\r\n            ></NewMaterialCard>\r\n        )\r\n    }\r\n    return res;\r\n}\r\n\r\n\r\n\r\nfunction parseTeacherTests(data:IEQuery){\r\n}\r\n\r\ninterface IELessonDetail{\r\n    data: IEQuery\r\n}\r\n\r\nconst ChildLessonDetail:react.FC<IELessonDetail> = (props) => {\r\n    const data = props.data;\r\n    return <div className=\"lesson-details__container\">\r\n    <div className=\"lesson-details__heading\">\r\n        {data.typeLesson.name}, {data.typeLesson.group.name}, {data.name}, 27.09\r\n        <Editor content={data!.content}></Editor>\r\n        <div className=\"materials\">\r\n            <div className=\"lesson-details__heading\">\r\n                Материалы\r\n            </div>\r\n            <div className=\"materials__content\">\r\n                {parseMaterials(data)}\r\n            </div>\r\n        </div>\r\n        <div className=\"tests\">\r\n            <div className=\"lesson-details__heading\">Тесты</div>\r\n            <div className=\"materials__content\">\r\n                {parseTests(data)}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n}\r\n\r\ninterface IEMaterialCard{\r\n    name:string;\r\n}\r\n\r\nconst NewMaterialCard:react.FC<IEMaterialCard> = (props) => {\r\n    return <div className=\"teacher-material\">\r\n    <span className=\"teacher-material__text\">\r\n        {props.name}\r\n    </span>   \r\n</div>\r\n}\r\ninterface IETestCard{\r\n    name:string;\r\n    questions:number;\r\n}\r\nconst NewTestCard:react.FC<IETestCard> = (props) => {\r\n    return <div className=\"teacher-test-card__container\">\r\n            <div className=\"test-card__heading\">Тест.{props.name}</div>\r\n            <div className=\"test-card__questions\"> Вопросов:&nbsp;<span className=\"colorize\"> {props.questions} </span></div>\r\n        </div>\r\n}\r\n\r\ninterface IEPlusButton{\r\n    OnClick:Function;\r\n}\r\n\r\nconst PlusButon:react.FC<IEPlusButton> = (props) => {\r\n    return <div className=\"teacher-material teacher-material__add-button\" onClick={props.OnClick()}>\r\n            <span className=\"plus\">+</span>\r\n        </div>\r\n}\r\n\r\nfunction parseTests(data:IEQuery){\r\n    let res = []\r\n    for (let test of data.tests){\r\n        res.push(\r\n            <NewTestCard\r\n                name={test.name}\r\n                questions={test.taskLen}\r\n            ></NewTestCard>\r\n        );\r\n    }\r\n    return res;\r\n}\r\n\r\nconst TeacherLessonDetail:react.FC<IELessonDetail> = (props) => {\r\n    const data = props.data;\r\n    return <div className=\"lesson-details__container\">\r\n    <div className=\"lesson-details__heading\">\r\n        {data.typeLesson.name}, {data.typeLesson.group.name}, {data.name}, 27.09\r\n    </div>\r\n    <div className=\"teacher-lesson-detail__container\">\r\n        <div className=\"teacher-lesson-detail__heading\">\r\n            <div className=\"teacher-lesson-detail__info\">\r\n                <div className=\"teacher-lesson-detail__class-name\">\r\n                    8.3 класс\r\n                </div>\r\n                <div className=\"teacher-lesson-detail__subject-name\">\r\n                    Английский язык\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"teacher-lesson__times\">\r\n                <div className=\"deadline__date\">\r\n                    урок доступен с <span className=\"colorize\">27.09 </span>\r\n                    до <span className=\"colorize\">27.10</span> \r\n                </div>\r\n                <div className=\"deadline__time\">\r\n                    с <span className=\"colorize\">11:00</span> до <span className=\"colorize\">22:00</span>\r\n                </div>\r\n                <div className=\"change__time\">\r\n                    Изменить время\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"teacher-lesson__content\">\r\n            <div className=\"teacher-content__first-row\">\r\n                <div className=\"teacher-lesson__theme\">\r\n                    <div className=\"teacher-lesson-theme__heading\">\r\n                        Тема урока\r\n                    </div>\r\n                    <input type=\"text\" placeholder=\"Введите тему урока\" className=\"lesson-theme__input\" value={data.name}/>\r\n                </div>\r\n                <div className=\"teacher-lesson__materials\">\r\n                    <div className=\"teacher-materials__heading\">Добавьте материалы к уроку</div>\r\n                    <div className=\"teacher-materials__content\">\r\n                        {parseMaterials(data)}\r\n                        <div className=\"teacher-material teacher-material__add-button\">\r\n                         <span className=\"plus\">+</span>   \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"teacher-content__first-row second-row\">\r\n                <div className=\"teacher-lesson__descr\">\r\n                    <div className=\"teacher-lesson-theme__heading\">\r\n                        Описание урока\r\n                    </div>\r\n                    <textarea className=\"teacher-descr__input\" placeholder=\"Описание урока\">{data.content}</textarea>\r\n                </div>\r\n                <div className=\"teacher-lesson__tests\">\r\n                    <div className=\"teacher-materials__heading\">Добавьте тесты к уроку</div>\r\n                    <div className=\"teacher-tests__content\">\r\n                        {parseTests(data)}\r\n                        <PlusButon OnClick={() => {}}/>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    </div>\r\n\r\n</div>\r\n}\r\n\r\nexport const LessonDetails:react.FC = () => {\r\n    const {createWorkLink} = useContext(ChildContext);\r\n    const {id} = useParams<IEParams>();\r\n    let {loading, data} = useQuery(lessonDetalsQuery, {variables:{id:id}})\r\n    if (loading) return <div>loading...</div>;\r\n    console.log(data);\r\n    data = data.lessons as IEQuery;\r\n    return <div>\r\n        { createWorkLink == \"\" ? <ChildLessonDetail data={data}></ChildLessonDetail> : \r\n            <TeacherLessonDetail data={data}></TeacherLessonDetail>}\r\n    </div> \r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\editor.jsx",["207"],"import React, {useEffect} from \"react\";\r\n\r\nimport {CKEditor} from \"@ckeditor/ckeditor5-react\";\r\n\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\n\r\nimport \"./css/editor.css\"\r\n\r\nexport const Editor = (props) => {\r\n\r\n    return <CKEditor\r\n        className=\"editor\"\r\n        editor={ClassicEditor}\r\n        data = {props.content}\r\n        disabled = {true}\r\n        config = {\r\n            {\r\n                toolbar: [],\r\n                          removePlugins: ['Heading', 'Link'],\r\n                isReadOnly: true,\r\n            }\r\n        }\r\n        \r\n    >\r\n    </CKEditor>\r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\materialCard.tsx",["208"],"import react from \"react\";\r\n\r\nimport \"./css/material-card.css\"\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\ninterface IEMaterialCard{\r\n    name:string;\r\n    link:string;\r\n}\r\n\r\nexport const MaterialCard:react.FC<IEMaterialCard> = (props) => {\r\n    return <a href={\"http://\"+props.link}>\r\n            <div className=\"material-card__container\">\r\n        <div className=\"material-card__header\">\r\n            {props.name}\r\n        </div>\r\n        <div className=\"material-card__content\">\r\n            {props.link}\r\n        </div>\r\n    </div>\r\n    </a>    \r\n\r\n}",["209","210"],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\testCard.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getLessonDetails.ts",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\LobbyContentRouter.tsx",["211","212","213"],"import react, {useState} from \"react\"\r\n\r\nimport \"../css/lobby.css\";\r\n\r\nimport {\r\n    useParams, useRouteMatch, Link, Switch, Route, Redirect\r\n} from \"react-router-dom\"\r\n\r\n\r\nimport {\r\n    IEGetParams,\r\n    IEMenuItem\r\n} from \"./interfaces\"\r\n\r\nimport {ChildContext} from \"./childContext\";\r\nimport {ChildLobbyContentRouter} from \"./childLobbyContentRouter\"\r\nimport {TeacherLobbyContentRouter} from \"./teacherLobbyContentRouter\";\r\n\r\ninterface IELobby{\r\n    items: Map<string, IEMenuItem>,\r\n    ContentRouter: react.ReactNode,\r\n    defaultPath:string,\r\n    createWork:string\r\n}\r\n\r\nexport const LobbyContentRouter:react.FC = () => {\r\n    let items: Map<string, IEMenuItem>;\r\n    const {url} = useRouteMatch()\r\n    const {type} = useParams<IEGetParams>();\r\n    switch (type) {\r\n        case \"child\":\r\n            items = new Map([\r\n                [\"subjects\", {name: \"Предметы\"}],\r\n                [\"homework\", {name: \"Домашняя работа\"}],\r\n                [\"marks\", {name: \"Оценки\"}],\r\n                [\"add-material\", {name: \"Доп. материал\"}]\r\n            ]);\r\n\r\n            return <Lobby createWork=\"\" defaultPath=\"subjects\" items={items} ContentRouter={\r\n                <ChildLobbyContentRouter></ChildLobbyContentRouter>}></Lobby>\r\n        case \"teacher\":\r\n            items = new Map([\r\n                [\"my-classes\", {name: \"Мои классы\"}],\r\n                [\"create-work\", {name:\"Создать работу\"}],\r\n                [\"check-works\", {name:\"Проверить работы\"}],\r\n                [\"works-archieve\", {name: \"Архив работ\"}]\r\n            ])\r\n            return <Lobby createWork={`${url}/create-work`} defaultPath=\"my-classes\" items={items} ContentRouter={\r\n                <TeacherLobbyContentRouter></TeacherLobbyContentRouter>\r\n            }></Lobby>\r\n    }\r\n    return <div>error</div>\r\n}\r\n\r\nexport const Lobby:react.FC<IELobby> = (props) => {\r\n    const [activeName, setActiveName] = useState(props.defaultPath)\r\n    const {url} = useRouteMatch();\r\n    const {id, type, action} = useParams<IEGetParams>();\r\n\r\n    let widgets: react.ReactNode[] = [];\r\n    for (let item of props.items){\r\n        widgets.push(\r\n            <Link to={`${url}/${item[0]}`}>\r\n                <div className={`${activeName == item[0] ? \"active\" : \"\"}`} key={item[1].name}>\r\n                    {item[1].name}\r\n                </div>\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    return <ChildContext.Provider value={{id, setActiveName, createWorkLink:props.createWork}}>\r\n        <div className=\"lobby__container\">\r\n        <div className=\"lobby__menu\">\r\n            <div className=\"lobby__heading\">\r\n                EvgenApp\r\n            </div>\r\n            <div className=\"lobby-menu__content\">\r\n                {widgets}\r\n            </div>\r\n            <div className=\"company\">© Gladio. Dev</div>\r\n        </div>\r\n        <div className=\"lobby__content\">\r\n            <Switch>\r\n                <Route path={`${url}/:type`}>\r\n                    {props.ContentRouter}\r\n                </Route>\r\n                <Route path={`${url}/`}>\r\n                    <Redirect to={`${url}/${props.defaultPath}`}></Redirect>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    </div>\r\n    </ChildContext.Provider>\r\n     \r\n}","C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\teacherLobbyContentRouter.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\screens\\content\\teacherClasses.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\uiKit\\teacherClassCard.tsx",[],"C:\\Users\\ilvsl\\evgen-app\\evgen-app-ui\\src\\QUERIES\\getTeacherSubjects.ts",[],{"ruleId":"214","severity":1,"message":"215","line":7,"column":9,"nodeType":"216","messageId":"217","endLine":7,"endColumn":21},{"ruleId":"214","severity":1,"message":"218","line":22,"column":12,"nodeType":"216","messageId":"217","endLine":22,"endColumn":16},{"ruleId":"219","severity":1,"message":"220","line":25,"column":55,"nodeType":"221","messageId":"222","endLine":25,"endColumn":57},{"ruleId":"223","severity":1,"message":"224","line":41,"column":21,"nodeType":"225","endLine":41,"endColumn":35},{"ruleId":"223","severity":1,"message":"226","line":44,"column":21,"nodeType":"225","endLine":44,"endColumn":42},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"214","severity":1,"message":"231","line":1,"column":8,"nodeType":"216","messageId":"217","endLine":1,"endColumn":13},{"ruleId":"214","severity":1,"message":"232","line":5,"column":9,"nodeType":"216","messageId":"217","endLine":5,"endColumn":21},{"ruleId":"214","severity":1,"message":"233","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":14},{"ruleId":"214","severity":1,"message":"234","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":16},{"ruleId":"219","severity":1,"message":"220","line":14,"column":47,"nodeType":"221","messageId":"222","endLine":14,"endColumn":49},{"ruleId":"219","severity":1,"message":"235","line":17,"column":42,"nodeType":"221","messageId":"222","endLine":17,"endColumn":44},{"ruleId":"214","severity":1,"message":"236","line":1,"column":16,"nodeType":"216","messageId":"217","endLine":1,"endColumn":24},{"ruleId":"214","severity":1,"message":"234","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":16},{"ruleId":"214","severity":1,"message":"237","line":5,"column":10,"nodeType":"216","messageId":"217","endLine":5,"endColumn":23},{"ruleId":"219","severity":1,"message":"220","line":25,"column":53,"nodeType":"221","messageId":"222","endLine":25,"endColumn":55},{"ruleId":"219","severity":1,"message":"220","line":27,"column":56,"nodeType":"221","messageId":"222","endLine":27,"endColumn":58},{"ruleId":"238","severity":1,"message":"239","line":33,"column":79,"nodeType":"225","endLine":33,"endColumn":99},{"ruleId":"214","severity":1,"message":"240","line":37,"column":11,"nodeType":"216","messageId":"217","endLine":37,"endColumn":23},{"ruleId":"241","severity":1,"message":"242","line":17,"column":9,"nodeType":"216","messageId":"217","endLine":17,"endColumn":19},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"214","severity":1,"message":"243","line":14,"column":27,"nodeType":"216","messageId":"217","endLine":14,"endColumn":31},{"ruleId":"214","severity":1,"message":"244","line":24,"column":9,"nodeType":"216","messageId":"217","endLine":24,"endColumn":14},{"ruleId":"214","severity":1,"message":"245","line":39,"column":21,"nodeType":"216","messageId":"217","endLine":39,"endColumn":26},{"ruleId":"214","severity":1,"message":"234","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":16},{"ruleId":"214","severity":1,"message":"246","line":10,"column":10,"nodeType":"216","messageId":"217","endLine":10,"endColumn":17},{"ruleId":"219","severity":1,"message":"220","line":45,"column":51,"nodeType":"221","messageId":"222","endLine":45,"endColumn":53},{"ruleId":"219","severity":1,"message":"220","line":45,"column":101,"nodeType":"221","messageId":"222","endLine":45,"endColumn":103},{"ruleId":"219","severity":1,"message":"220","line":47,"column":40,"nodeType":"221","messageId":"222","endLine":47,"endColumn":42},{"ruleId":"219","severity":1,"message":"220","line":47,"column":68,"nodeType":"221","messageId":"222","endLine":47,"endColumn":70},{"ruleId":"238","severity":1,"message":"239","line":52,"column":13,"nodeType":"225","endLine":52,"endColumn":48},{"ruleId":"219","severity":1,"message":"220","line":82,"column":60,"nodeType":"221","messageId":"222","endLine":82,"endColumn":62},{"ruleId":"219","severity":1,"message":"220","line":88,"column":56,"nodeType":"221","messageId":"222","endLine":88,"endColumn":58},{"ruleId":"247","severity":1,"message":"248","line":88,"column":186,"nodeType":"221","messageId":"249","endLine":88,"endColumn":187},{"ruleId":"219","severity":1,"message":"220","line":89,"column":34,"nodeType":"221","messageId":"222","endLine":89,"endColumn":36},{"ruleId":"250","severity":1,"message":"251","line":93,"column":84,"nodeType":"252","endLine":93,"endColumn":96},{"ruleId":"219","severity":1,"message":"220","line":121,"column":60,"nodeType":"221","messageId":"222","endLine":121,"endColumn":62},{"ruleId":"219","severity":1,"message":"220","line":126,"column":58,"nodeType":"221","messageId":"222","endLine":126,"endColumn":60},{"ruleId":"219","severity":1,"message":"220","line":127,"column":221,"nodeType":"221","messageId":"222","endLine":127,"endColumn":223},{"ruleId":"253","severity":1,"message":"254","line":144,"column":18,"nodeType":"255","messageId":"256","endLine":144,"endColumn":29,"fix":"257"},{"ruleId":"214","severity":1,"message":"258","line":16,"column":10,"nodeType":"216","messageId":"217","endLine":16,"endColumn":16},{"ruleId":"219","severity":1,"message":"235","line":90,"column":36,"nodeType":"221","messageId":"222","endLine":90,"endColumn":38},{"ruleId":"214","severity":1,"message":"259","line":7,"column":9,"nodeType":"216","messageId":"217","endLine":7,"endColumn":21},{"ruleId":"214","severity":1,"message":"260","line":8,"column":9,"nodeType":"216","messageId":"217","endLine":8,"endColumn":17},{"ruleId":"214","severity":1,"message":"261","line":15,"column":10,"nodeType":"216","messageId":"217","endLine":15,"endColumn":21},{"ruleId":"214","severity":1,"message":"262","line":16,"column":10,"nodeType":"216","messageId":"217","endLine":16,"endColumn":26},{"ruleId":"214","severity":1,"message":"263","line":59,"column":10,"nodeType":"216","messageId":"217","endLine":59,"endColumn":27},{"ruleId":"219","severity":1,"message":"220","line":215,"column":26,"nodeType":"221","messageId":"222","endLine":215,"endColumn":28},{"ruleId":"241","severity":1,"message":"264","line":1,"column":16,"nodeType":"216","messageId":"217","endLine":1,"endColumn":25},{"ruleId":"214","severity":1,"message":"265","line":5,"column":9,"nodeType":"216","messageId":"217","endLine":5,"endColumn":13},{"ruleId":"227","replacedBy":"266"},{"ruleId":"229","replacedBy":"267"},{"ruleId":"214","severity":1,"message":"268","line":58,"column":16,"nodeType":"216","messageId":"217","endLine":58,"endColumn":20},{"ruleId":"214","severity":1,"message":"269","line":58,"column":22,"nodeType":"216","messageId":"217","endLine":58,"endColumn":28},{"ruleId":"219","severity":1,"message":"220","line":64,"column":47,"nodeType":"221","messageId":"222","endLine":64,"endColumn":49},"@typescript-eslint/no-unused-vars","'DefaultInput' is defined but never used.","Identifier","unusedVar","'path' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component Login_inputs must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Registration_inputs must be in PascalCase or SCREAMING_SNAKE_CASE","no-native-reassign",["270"],"no-negated-in-lhs",["271"],"'react' is defined but never used.","'Registration' is defined but never used.","'type' is defined but never used.","'ReactDOM' is defined but never used.","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'CSSProperties' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ToogleConfig' is defined but never used.","no-unused-vars","'ChildLobby' is defined but never used.","'data' is assigned a value but never used.","'links' is assigned a value but never used.","'error' is assigned a value but never used.","'TaskRow' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","react/style-prop-object","Style prop value must be an object","JSXAttribute","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","NewExpression","useLiteral",{"range":"272","text":"273"},"'create' is defined but never used.","'MaterialCard' is defined but never used.","'TestCard' is defined but never used.","'IEGetParams' is defined but never used.","'TeacherClassCard' is defined but never used.","'parseTeacherTests' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.",["270"],["271"],"'type' is assigned a value but never used.","'action' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[5534,5545],"[]"]